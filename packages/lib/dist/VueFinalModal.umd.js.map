{"version":3,"file":"VueFinalModal.umd.js","sources":["../src/utils/transitionState.js","../src/utils/focusTrap.js","../src/utils/dragResize.js","../src/utils/bodyScrollLock.js","../src/VueFinalModal.vue","../src/VueFinalModal.vue?vue&type=template&id=72c09f54&lang.js","../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js","../src/ModalsContainer.vue","../src/ModalsContainer.vue?vue&type=template&id=437c4752&lang.js","../src/modalInstance.js"],"sourcesContent":["import { ref } from 'vue'\n\nexport const TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport const useTransitionState = () => {\n  const state = ref(null)\n\n  const listeners = {\n    beforeEnter() {\n      state.value = TransitionState.Entering\n    },\n    afterEnter() {\n      state.value = TransitionState.Enter\n    },\n    beforeLeave() {\n      state.value = TransitionState.Leaving\n    },\n    afterLeave() {\n      state.value = TransitionState.Leave\n    }\n  }\n\n  return {\n    state,\n    listeners\n  }\n}\n","import { watch } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  /**\n   * Get last Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  /**\n   * Get first Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get firstElement() {\n    return this.elements[0] || null\n  }\n\n  /**\n   * Get whether the trap is enabled\n   *\n   * @return {boolean} isEnabled\n   */\n  get isEnabled() {\n    return !!this.root\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement)) {\n        this.lastElement.focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement)) {\n      this.firstElement.focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  /**\n   * Enable focus trap\n   *\n   * @param {HTMLElement} root - the focus trap root element\n   */\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  /**\n   * Disable focus trap\n   */\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\n/**\n * @type {FocusTrap | null}\n */\nlet focusTrap = null\n\n/**\n * Get FocusTrap focusTrap\n *\n * @returns {FocusTrap} focusTrap\n */\nexport function useFocusTrap({ props, vfmContainer, modalTransitionState }) {\n  if (focusTrap == null) {\n    focusTrap = new FocusTrap()\n  }\n\n  watch(modalTransitionState, state => {\n    switch (state) {\n      case TransitionState.Enter:\n        if (props.focusRetain || props.focusTrap) {\n          vfmContainer.value.focus()\n        }\n        props.focusTrap && focusTrap.enable(vfmContainer.value)\n        break\n      case TransitionState.Leaving:\n        if (focusTrap.enabled) {\n          focusTrap.disable()\n        }\n        break\n    }\n  })\n\n  return { focusTrap }\n}\n","import { watch, ref, nextTick } from 'vue'\nimport { TransitionState } from './transitionState'\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nconst pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n\nexport function useDragResize({\n  props,\n  visible,\n  vfmContainer,\n  vfmContent,\n  vfmResize,\n  modalTransitionState,\n  onEvent = () => {}\n}) {\n  const resizeVisible = ref(false)\n  const state = ref(null)\n  const dragResizeStyle = ref({})\n\n  watch(modalTransitionState, val => {\n    switch (val) {\n      case TransitionState.Enter:\n        props.drag && addDragDown()\n        props.resize && addResizeDown()\n        break\n      case TransitionState.Leave:\n        if (!props.keepChangedStyle) {\n          dragResizeStyle.value = {}\n        }\n        break\n    }\n  })\n\n  watch(\n    () => props.drag,\n    val => {\n      if (visible.value) {\n        val ? addDragDown() : removeDragDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.resize,\n    val => {\n      if (visible.value) {\n        val ? addResizeDown() : removeResizeDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.keepChangedStyle,\n    val => {\n      if (!val) {\n        dragResizeStyle.value = {}\n      }\n    }\n  )\n\n  function pointerDown(e) {\n    e.stopPropagation()\n    const STATE_RESIZE = 'resize'\n    const STATE_DRAG = 'drag'\n    const direction = e.target.getAttribute('direction')\n    let _state\n    if (direction) {\n      _state = STATE_RESIZE\n    } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n      _state = STATE_DRAG\n    } else {\n      return\n    }\n    state.value = `${_state}:start`\n    onEvent?.(e)\n    const down = getPosition(e)\n    const rectContainer = vfmContainer.value.getBoundingClientRect()\n    const rectContent = vfmContent.value.getBoundingClientRect()\n    const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n    const position = {\n      top: trimPx(dragResizeStyle.value.top),\n      left: trimPx(dragResizeStyle.value.left)\n    }\n    const limit = (() => {\n      if (props.fitParent) {\n        const limit = {\n          absolute() {\n            return {\n              minTop: 0,\n              minLeft: 0,\n              maxTop: rectContainer.height - rectContent.height,\n              maxLeft: rectContainer.width - rectContent.width\n            }\n          },\n          relative() {\n            return {\n              minTop: position.top + rectContainer.top - rectContent.top,\n              minLeft: position.left + rectContainer.left - rectContent.left,\n              maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n              maxLeft: position.left + rectContainer.right - rectContent.right\n            }\n          }\n        }\n        return isAbsolute ? limit.absolute() : limit.relative()\n      } else {\n        return {}\n      }\n    })()\n    const resetBodyCursor = _state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n    const moving = e => {\n      // onPointerMove\n      e.stopPropagation()\n      state.value = `${_state}:move`\n      onEvent?.(e)\n      const move = getPosition(e)\n      let offset = {\n        x: move.x - down.x,\n        y: move.y - down.y\n      }\n      if (_state === STATE_RESIZE) {\n        offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n      }\n\n      let top\n      let left\n      if (isAbsolute) {\n        top = rectContent.top - rectContainer.top + offset.y\n        left = rectContent.left - rectContainer.left + offset.x\n      } else {\n        top = position.top + offset.y\n        left = position.left + offset.x\n      }\n      if (_state === STATE_DRAG && props.fitParent) {\n        top = clamp(limit.minTop, top, limit.maxTop)\n        left = clamp(limit.minLeft, left, limit.maxLeft)\n      }\n      const style = {\n        position: 'relative',\n        top: top + 'px',\n        left: left + 'px',\n        margin: 'unset',\n        touchAction: 'none',\n        ...(isAbsolute && {\n          position: 'absolute',\n          transform: 'unset',\n          width: rectContent.width + 'px',\n          height: rectContent.height + 'px'\n        }),\n        ...(offset.width && { width: offset.width + 'px' }),\n        ...(offset.height && { height: offset.height + 'px' })\n      }\n\n      dragResizeStyle.value = {\n        ...dragResizeStyle.value,\n        ...style\n      }\n    }\n    const end = e => {\n      // onPointerUp\n      e.stopPropagation()\n      if (_state === STATE_RESIZE) {\n        resetBodyCursor && resetBodyCursor()\n      }\n      // Excute onMouseupContainer before trigger onEvent\n      setTimeout(() => {\n        state.value = `${_state}:end`\n        onEvent?.(e)\n      })\n      removeListener('move', document, moving)\n      removeListener('up', document, end)\n    }\n    addListener('move', document, moving)\n    addListener('up', document, end)\n  }\n  function addDragDown() {\n    addListener('down', vfmContent.value, pointerDown)\n    dragResizeStyle.value.touchAction = 'none'\n  }\n  function removeDragDown() {\n    removeListener('down', vfmContent.value, pointerDown)\n  }\n  function addResizeDown() {\n    resizeVisible.value = true\n    nextTick(() => {\n      addListener('down', vfmResize.value, pointerDown)\n    })\n  }\n  function removeResizeDown() {\n    removeListener('down', vfmResize.value, pointerDown)\n    resizeVisible.value = false\n  }\n  function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n    const setOffset = dir => {\n      let offsetAxis = offset[dir.axis]\n      offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n      let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n      offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n      return {\n        [dir.edgeName]: edge,\n        [dir.axis]: offsetAxis\n      }\n    }\n\n    const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n      const rectContentEdge = rectContent[edgeName]\n      const positionOffset = rectContainer[position] - rectContent[position]\n      const EdgeName = capitalize(edgeName)\n      return {\n        axis,\n        edgeName,\n        min: isPositive ? positionOffset : -rectContentEdge,\n        max: isPositive ? rectContentEdge : positionOffset,\n        minEdge: props[`min${EdgeName}`],\n        maxEdge: props[`max${EdgeName}`],\n        getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n        getOffsetAxis: (edge, isAbsolute) => {\n          const offsetAxis = rectContent[edgeName] - edge\n          if (isAbsolute) {\n            return isPositive ? offsetAxis : 0\n          } else {\n            return ((isPositive ? 1 : -1) * offsetAxis) / 2\n          }\n        }\n      }\n    }\n\n    const directions = {\n      t: ['top', 'height', 'y', true],\n      b: ['bottom', 'height', 'y', false],\n      l: ['left', 'width', 'x', true],\n      r: ['right', 'width', 'x', false]\n    }\n\n    let _offset = { x: 0, y: 0 }\n    direction.split('').forEach(dir => {\n      const directionInfo = getDirectionInfo(...directions[dir])\n      _offset = {\n        ..._offset,\n        ...setOffset(directionInfo)\n      }\n    })\n    return _offset\n  }\n\n  return {\n    resizeVisible,\n    state,\n    dragResizeStyle,\n    removeDragDown,\n    removeResizeDown\n  }\n}\n","// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(() => props.lockScroll, handleLockScroll)\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n          props.lockScroll && enableBodyScroll(vfmContainer.value)\n\n          let stopEvent = false\n          const event = createModalEvent({\n            type: 'closed',\n            stop() {\n              stopEvent = true\n            }\n          })\n          emit('_closed')\n          emit('closed', event)\n          resolveToggle('hide')\n          if (stopEvent) return\n          params.value = {}\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle,\n        params\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      params,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n    const params = ref({})\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(() => props.lockScroll, handleLockScroll)\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n          props.lockScroll && enableBodyScroll(vfmContainer.value)\n\n          let stopEvent = false\n          const event = createModalEvent({\n            type: 'closed',\n            stop() {\n              stopEvent = true\n            }\n          })\n          emit('_closed')\n          emit('closed', event)\n          resolveToggle('hide')\n          if (stopEvent) return\n          params.value = {}\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle,\n        params\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      params,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModalComponent from './VueFinalModal.vue'\nimport ModalsContainerComponent from './ModalsContainer.vue'\nimport { markRaw, reactive, shallowReactive } from 'vue'\n\nexport class ModalInstance {\n  constructor() {\n    const bindApi = component => {\n      const _component = { ...component, props: { ...component.props } }\n      Object.assign(_component.props, {\n        api: { type: Object, default: () => this }\n      })\n      return markRaw(_component)\n    }\n\n    this.modals = []\n    this.openedModals = []\n    this.VueFinalModal = bindApi(VueFinalModalComponent)\n\n    this.dynamicModals = shallowReactive([])\n    this.ModalsContainer = bindApi(ModalsContainerComponent)\n  }\n\n  show(modal, ...args) {\n    switch (typeof modal) {\n      case 'string':\n        return this.toggle(modal, true, ...args)\n      case 'object': {\n        const { show } = this.useModal(modal, args[0])\n        return show()\n      }\n    }\n  }\n\n  hide(...names) {\n    return this.toggle(names, false)\n  }\n\n  hideAll() {\n    return this.hide(...this.openedModals.map(modal => modal.props.name))\n  }\n\n  toggle(name, ...args) {\n    const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n    return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n  }\n\n  get(...names) {\n    return this.modals.filter(modal => names.includes(modal.props.name))\n  }\n\n  existModal(options) {\n    return this.dynamicModals.indexOf(options) !== -1\n  }\n\n  useModal(_options, params = {}) {\n    let options = reactive({\n      value: false,\n      component: this.VueFinalModal,\n      id: Symbol('useModal'),\n      bind: {},\n      slots: {},\n      on: {},\n      params,\n      ..._options\n    })\n\n    const show = () => {\n      return this.existModal(options)\n        ? Promise.resolve('[Vue Final Modal] modal is already opened')\n        : new Promise((resolve, reject) => {\n            options.value = true\n            options.reject = reject\n            options.opened = () => {\n              resolve('show')\n            }\n            this.dynamicModals.push(options)\n          })\n    }\n\n    const hide = () => {\n      return this.existModal(options)\n        ? new Promise((resolve, reject) => {\n            options.value = false\n            options.rejectClose = reject\n            options.closed = () => {\n              resolve('hide')\n            }\n          })\n        : Promise.resolve('[Vue Final Modal] modal is already closed')\n    }\n\n    return { show, hide, options }\n  }\n}\n\n/**\n * @description Support create multiple modal instance\n */\nexport const createModalInstance = () => {\n  let modalInstance = new ModalInstance()\n  return {\n    $vfm: modalInstance,\n    VueFinalModal: modalInstance.VueFinalModal,\n    ModalsContainer: modalInstance.ModalsContainer,\n    useModal: modalInstance.useModal.bind(modalInstance)\n  }\n}\n\n/**\n * @description Create modal instance by default for directly support `import { $vfm, VueFinalModal, ModalsContainer, useModal } from 'vue-final-modal'`\n */\nconst modalInstance = createModalInstance()\n\nexport const { $vfm, VueFinalModal, ModalsContainer, useModal } = modalInstance\n"],"names":["TransitionState","useTransitionState","state","ref","listeners","beforeEnter","value","afterEnter","beforeLeave","afterLeave","queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","length","event","key","keyCode","isTabPressed","shiftKey","lastElement","firstElement","focus","preventDefault","addEventListener","removeEventListener","focusTrap","useFocusTrap","props","vfmContainer","modalTransitionState","watch","focusRetain","enable","enabled","disable","resizeCursor","t","tr","r","br","b","bl","l","tl","getPosition","e","targetTouches","x","clientX","y","clientY","clamp","min","num","max","Math","trimPx","distance","Number","replace","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","useDragResize","visible","vfmContent","vfmResize","onEvent","resizeVisible","dragResizeStyle","pointerDown","stopPropagation","_state","STATE_RESIZE","STATE_DRAG","direction","target","getAttribute","dragSelector","includes","validDragElement","cacheStyle","rectContainer","getBoundingClientRect","rectContent","isAbsolute","window","getComputedStyle","position","top","left","limit","fitParent","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","body","style","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","s","rectContentEdge","positionOffset","EdgeName","charAt","toUpperCase","slice","directions","_offset","split","forEach","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","removeDragDown","addResizeDown","nextTick","removeResizeDown","val","drag","resize","keepChangedStyle","hasPassiveEvents","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","nodeType","Node","ELEMENT_NODE","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","touches","disableBodyScroll","targetElement","options","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getPropertyValue","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","noop","name","String","modelValue","Boolean","displayDirective","validator","indexOf","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","lockScroll","hideOverlay","clickToClose","escToClose","nonModal","attach","transition","overlayTransition","zIndexAuto","zIndexBase","zIndex","resizeDirections","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","vfmOverlayTransition","vfmTransition","modalStackIndex","visibility","reactive","modal","overlay","overlayTransitionState","overlayListeners","modalListeners","_stopEvent","params","lastMousedownEl","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","handleLockScroll","toggle","mounted","createModalEvent","emitEvent","appendChild","index","api","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","querySelector","eventProps","eventType","stopEvent","stop","show","_params","Promise","resolve","reject","res","err","arguments","display","flush","modals","onMounted","onBeforeUnmount","remove","onMousedown","onMouseupContainer","onEsc","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","$props","$setup","_createElementBlock","onKeydown","_createVNode","_mergeProps","_toHandlers","_createElementVNode","toString","role","tabindex","onMouseup","_renderSlot","_ctx","_hoisted_2","methods","dynamicModals","closed","beforeClose","rejectClose","beforeOpen","_this","$nextTick","isString","_hoisted_1","_createBlock","component","id","on","on_beforeClose","$options","on_closed","on_beforeOpen","on_opened","opened","slots","slot","_createCommentVNode","innerHTML","ModalInstance","bindApi","_component","assign","markRaw","VueFinalModal","VueFinalModalComponent","shallowReactive","ModalsContainer","ModalsContainerComponent","args","useModal","names","hide","map","get","allSettled","_options","_this2","existModal","createModalInstance","modalInstance","$vfm"],"mappings":"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"}