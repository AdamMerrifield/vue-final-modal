{"version":3,"file":"VueFinalModal.umd.js","sources":["../src/utils/transitionState.js","../src/utils/focusTrap.js","../src/utils/dragResize.js","../src/utils/bodyScrollLock.js","../src/VueFinalModal.vue","../src/VueFinalModal.vue?vue&type=template&id=72c09f54&lang.js","../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js","../src/ModalsContainer.vue","../src/ModalsContainer.vue?vue&type=template&id=437c4752&lang.js","../src/modalInstance.js","../src/hoc/BottomSheet.vue","../src/hoc/BottomSheet.vue?vue&type=template&id=b6aa8590&lang.js"],"sourcesContent":["import { ref } from 'vue'\n\nexport const TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport const useTransitionState = () => {\n  const state = ref(null)\n\n  const listeners = {\n    beforeEnter() {\n      state.value = TransitionState.Entering\n    },\n    afterEnter() {\n      state.value = TransitionState.Enter\n    },\n    beforeLeave() {\n      state.value = TransitionState.Leaving\n    },\n    afterLeave() {\n      state.value = TransitionState.Leave\n    }\n  }\n\n  return {\n    state,\n    listeners\n  }\n}\n","import { watch } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  /**\n   * Get last Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  /**\n   * Get first Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get firstElement() {\n    return this.elements[0] || null\n  }\n\n  /**\n   * Get whether the trap is enabled\n   *\n   * @return {boolean} isEnabled\n   */\n  get isEnabled() {\n    return !!this.root\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement)) {\n        this.lastElement.focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement)) {\n      this.firstElement.focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  /**\n   * Enable focus trap\n   *\n   * @param {HTMLElement} root - the focus trap root element\n   */\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  /**\n   * Disable focus trap\n   */\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\n/**\n * @type {FocusTrap | null}\n */\nlet focusTrap = null\n\n/**\n * Get FocusTrap focusTrap\n *\n * @returns {FocusTrap} focusTrap\n */\nexport function useFocusTrap({ props, vfmContainer, modalTransitionState }) {\n  if (focusTrap == null) {\n    focusTrap = new FocusTrap()\n  }\n\n  watch(modalTransitionState, state => {\n    switch (state) {\n      case TransitionState.Enter:\n        if (props.focusRetain || props.focusTrap) {\n          vfmContainer.value.focus()\n        }\n        props.focusTrap && focusTrap.enable(vfmContainer.value)\n        break\n      case TransitionState.Leaving:\n        if (focusTrap.enabled) {\n          focusTrap.disable()\n        }\n        break\n    }\n  })\n\n  return { focusTrap }\n}\n","import { watch, ref, nextTick } from 'vue'\nimport { TransitionState } from './transitionState'\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nconst pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n\nexport function useDragResize({\n  props,\n  visible,\n  vfmContainer,\n  vfmContent,\n  vfmResize,\n  modalTransitionState,\n  onEvent = () => {}\n}) {\n  const resizeVisible = ref(false)\n  const state = ref(null)\n  const dragResizeStyle = ref({})\n\n  watch(modalTransitionState, val => {\n    switch (val) {\n      case TransitionState.Enter:\n        props.drag && addDragDown()\n        props.resize && addResizeDown()\n        break\n      case TransitionState.Leave:\n        if (!props.keepChangedStyle) {\n          dragResizeStyle.value = {}\n        }\n        break\n    }\n  })\n\n  watch(\n    () => props.drag,\n    val => {\n      if (visible.value) {\n        val ? addDragDown() : removeDragDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.resize,\n    val => {\n      if (visible.value) {\n        val ? addResizeDown() : removeResizeDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.keepChangedStyle,\n    val => {\n      if (!val) {\n        dragResizeStyle.value = {}\n      }\n    }\n  )\n\n  function pointerDown(e) {\n    e.stopPropagation()\n    const STATE_RESIZE = 'resize'\n    const STATE_DRAG = 'drag'\n    const direction = e.target.getAttribute('direction')\n    let _state\n    if (direction) {\n      _state = STATE_RESIZE\n    } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n      _state = STATE_DRAG\n    } else {\n      return\n    }\n    state.value = `${_state}:start`\n    onEvent?.(e)\n    const down = getPosition(e)\n    const rectContainer = vfmContainer.value.getBoundingClientRect()\n    const rectContent = vfmContent.value.getBoundingClientRect()\n    const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n    const position = {\n      top: trimPx(dragResizeStyle.value.top),\n      left: trimPx(dragResizeStyle.value.left)\n    }\n    const limit = (() => {\n      if (props.fitParent) {\n        const limit = {\n          absolute() {\n            return {\n              minTop: 0,\n              minLeft: 0,\n              maxTop: rectContainer.height - rectContent.height,\n              maxLeft: rectContainer.width - rectContent.width\n            }\n          },\n          relative() {\n            return {\n              minTop: position.top + rectContainer.top - rectContent.top,\n              minLeft: position.left + rectContainer.left - rectContent.left,\n              maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n              maxLeft: position.left + rectContainer.right - rectContent.right\n            }\n          }\n        }\n        return isAbsolute ? limit.absolute() : limit.relative()\n      } else {\n        return {}\n      }\n    })()\n    const resetBodyCursor = _state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n    const moving = e => {\n      // onPointerMove\n      e.stopPropagation()\n      state.value = `${_state}:move`\n      onEvent?.(e)\n      const move = getPosition(e)\n      let offset = {\n        x: move.x - down.x,\n        y: move.y - down.y\n      }\n      if (_state === STATE_RESIZE) {\n        offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n      }\n\n      let top\n      let left\n      if (isAbsolute) {\n        top = rectContent.top - rectContainer.top + offset.y\n        left = rectContent.left - rectContainer.left + offset.x\n      } else {\n        top = position.top + offset.y\n        left = position.left + offset.x\n      }\n      if (_state === STATE_DRAG && props.fitParent) {\n        top = clamp(limit.minTop, top, limit.maxTop)\n        left = clamp(limit.minLeft, left, limit.maxLeft)\n      }\n      const style = {\n        position: 'relative',\n        top: top + 'px',\n        left: left + 'px',\n        margin: 'unset',\n        touchAction: 'none',\n        ...(isAbsolute && {\n          position: 'absolute',\n          transform: 'unset',\n          width: rectContent.width + 'px',\n          height: rectContent.height + 'px'\n        }),\n        ...(offset.width && { width: offset.width + 'px' }),\n        ...(offset.height && { height: offset.height + 'px' })\n      }\n\n      dragResizeStyle.value = {\n        ...dragResizeStyle.value,\n        ...style\n      }\n    }\n    const end = e => {\n      // onPointerUp\n      e.stopPropagation()\n      if (_state === STATE_RESIZE) {\n        resetBodyCursor && resetBodyCursor()\n      }\n      // Excute onMouseupContainer before trigger onEvent\n      setTimeout(() => {\n        state.value = `${_state}:end`\n        onEvent?.(e)\n      })\n      removeListener('move', document, moving)\n      removeListener('up', document, end)\n    }\n    addListener('move', document, moving)\n    addListener('up', document, end)\n  }\n  function addDragDown() {\n    addListener('down', vfmContent.value, pointerDown)\n    dragResizeStyle.value.touchAction = 'none'\n  }\n  function removeDragDown() {\n    removeListener('down', vfmContent.value, pointerDown)\n  }\n  function addResizeDown() {\n    resizeVisible.value = true\n    nextTick(() => {\n      addListener('down', vfmResize.value, pointerDown)\n    })\n  }\n  function removeResizeDown() {\n    removeListener('down', vfmResize.value, pointerDown)\n    resizeVisible.value = false\n  }\n  function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n    const setOffset = dir => {\n      let offsetAxis = offset[dir.axis]\n      offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n      let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n      offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n      return {\n        [dir.edgeName]: edge,\n        [dir.axis]: offsetAxis\n      }\n    }\n\n    const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n      const rectContentEdge = rectContent[edgeName]\n      const positionOffset = rectContainer[position] - rectContent[position]\n      const EdgeName = capitalize(edgeName)\n      return {\n        axis,\n        edgeName,\n        min: isPositive ? positionOffset : -rectContentEdge,\n        max: isPositive ? rectContentEdge : positionOffset,\n        minEdge: props[`min${EdgeName}`],\n        maxEdge: props[`max${EdgeName}`],\n        getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n        getOffsetAxis: (edge, isAbsolute) => {\n          const offsetAxis = rectContent[edgeName] - edge\n          if (isAbsolute) {\n            return isPositive ? offsetAxis : 0\n          } else {\n            return ((isPositive ? 1 : -1) * offsetAxis) / 2\n          }\n        }\n      }\n    }\n\n    const directions = {\n      t: ['top', 'height', 'y', true],\n      b: ['bottom', 'height', 'y', false],\n      l: ['left', 'width', 'x', true],\n      r: ['right', 'width', 'x', false]\n    }\n\n    let _offset = { x: 0, y: 0 }\n    direction.split('').forEach(dir => {\n      const directionInfo = getDirectionInfo(...directions[dir])\n      _offset = {\n        ..._offset,\n        ...setOffset(directionInfo)\n      }\n    })\n    return _offset\n  }\n\n  return {\n    resizeVisible,\n    state,\n    dragResizeStyle,\n    removeDragDown,\n    removeResizeDown\n  }\n}\n","import { watch, nextTick, onBeforeUnmount } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n\nexport function useLockScroll({ props, vfmContainer, modalTransitionState }) {\n  watch(() => props.lockScroll, handleLockScroll)\n\n  watch(modalTransitionState, state => {\n    if (state === TransitionState.Leave) {\n      enable()\n    }\n  })\n\n  onBeforeUnmount(() => {\n    enable()\n  })\n\n  function handleLockScroll() {\n    if (!props.modelValue) return\n    nextTick(() => {\n      props.lockScroll ? disable() : enable()\n    })\n  }\n\n  function enable() {\n    props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n  }\n\n  function disable() {\n    vfmContainer.value &&\n      disableBodyScroll(vfmContainer.value, {\n        reserveScrollBarGap: true\n      })\n  }\n\n  return { handleLockScroll }\n}\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit, expose }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    expose(getModalInfo())\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModalComponent from './VueFinalModal.vue'\nimport ModalsContainerComponent from './ModalsContainer.vue'\nimport { markRaw, reactive, shallowReactive } from 'vue'\n\nexport class ModalInstance {\n  constructor() {\n    const bindApi = component => {\n      const _component = { ...component, props: { ...component.props } }\n      Object.assign(_component.props, {\n        api: { type: Object, default: () => this }\n      })\n      return markRaw(_component)\n    }\n\n    this.modals = []\n    this.openedModals = []\n    this.VueFinalModal = bindApi(VueFinalModalComponent)\n\n    this.dynamicModals = shallowReactive([])\n    this.ModalsContainer = bindApi(ModalsContainerComponent)\n  }\n\n  show(modal, ...args) {\n    switch (typeof modal) {\n      case 'string':\n        return this.toggle(modal, true, ...args)\n      case 'object': {\n        const { show } = this.useModal(modal, args[0])\n        return show()\n      }\n    }\n  }\n\n  hide(...names) {\n    return this.toggle(names, false)\n  }\n\n  hideAll() {\n    return this.hide(...this.openedModals.map(modal => modal.props.name))\n  }\n\n  toggle(name, ...args) {\n    const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n    return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n  }\n\n  get(...names) {\n    return this.modals.filter(modal => names.includes(modal.props.name))\n  }\n\n  existModal(options) {\n    return this.dynamicModals.indexOf(options) !== -1\n  }\n\n  useModal(_options) {\n    let options = reactive({\n      value: false,\n      component: this.VueFinalModal,\n      id: Symbol('useModal'),\n      bind: {},\n      slots: {},\n      on: {},\n      ..._options\n    })\n\n    const show = () => {\n      return this.existModal(options)\n        ? Promise.resolve('[Vue Final Modal] modal is already opened')\n        : new Promise((resolve, reject) => {\n            options.value = true\n            options.reject = reject\n            options.opened = () => {\n              resolve('show')\n            }\n            this.dynamicModals.push(options)\n          })\n    }\n\n    const hide = () => {\n      return this.existModal(options)\n        ? new Promise((resolve, reject) => {\n            options.value = false\n            options.rejectClose = reject\n            options.closed = () => {\n              resolve('hide')\n            }\n          })\n        : Promise.resolve('[Vue Final Modal] modal is already closed')\n    }\n\n    return { show, hide, options }\n  }\n}\n\n/**\n * @description Support create multiple modal instance\n */\nexport const createModalInstance = () => {\n  let modalInstance = new ModalInstance()\n  return {\n    $vfm: modalInstance,\n    VueFinalModal: modalInstance.VueFinalModal,\n    ModalsContainer: modalInstance.ModalsContainer,\n    useModal: modalInstance.useModal.bind(modalInstance)\n  }\n}\n\n/**\n * @description Create modal instance by default for directly support `import { $vfm, VueFinalModal, ModalsContainer, useModal } from 'vue-final-modal'`\n */\nconst modalInstance = createModalInstance()\n\nexport const { $vfm, VueFinalModal, ModalsContainer, useModal } = modalInstance\n","<template>\n  <vue-final-modal\n    :transition=\"{\n      'enter-active-class': 'slideInUp',\n      'leave-active-class': 'slideOutDown'\n    }\"\n  >\n    <div\n      ref=\"bottomSheetEl\"\n      class=\"vfm-bottom-sheet\"\n      :class=\"{ 'transition-transform': !isSwiping }\"\n      :style=\"{ transform: `translateY(${-offsetY}px)` }\"\n    >\n      <slot></slot>\n    </div>\n  </vue-final-modal>\n</template>\n\n<script>\nimport { ref, watch } from 'vue'\nimport { useSwipe } from '@vueuse/core'\nimport { VueFinalModal } from '../index'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\nconst DIRECTION_TO_CLOSE = 'DOWN'\n\nexport default {\n  components: {\n    VueFinalModal\n  },\n  setup(props, { emit, attrs }) {\n    const bottomSheetEl = ref(null)\n    const offsetY = ref(0)\n    let swipeStart = null\n    let allowSwipe = false\n\n    const { lengthY, direction, isSwiping } = useSwipe(bottomSheetEl, {\n      threshold: 0,\n      onSwipeStart(e) {\n        swipeStart = new Date().getTime()\n        allowSwipe = canSwipe(e.target)\n      },\n      onSwipe() {\n        if (!allowSwipe) return\n        if (direction.value === DIRECTION_TO_CLOSE) {\n          offsetY.value = -clamp(Math.abs(lengthY.value), 0, bottomSheetEl.value.offsetHeight)\n        }\n      },\n      onSwipeEnd(event, direction) {\n        const swipeEnd = new Date().getTime()\n\n        const validDirection = direction === DIRECTION_TO_CLOSE\n        const validDistance = Math.abs(lengthY.value) > LIMIT_DISTANCE * bottomSheetEl.value.offsetHeight\n        const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n        if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n          // eslint-disable-next-line vue/require-explicit-emits\n          emit('update:modelValue', false)\n          return\n        }\n\n        offsetY.value = 0\n      }\n    })\n\n    watch(\n      () => attrs.modelValue,\n      val => {\n        if (val) {\n          offsetY.value = 0\n        }\n      }\n    )\n\n    function canSwipe(target) {\n      const allow = target.scrollTop === 0\n      if (target === bottomSheetEl.value) {\n        return allow\n      } else {\n        return allow && canSwipe(target.parentElement)\n      }\n    }\n\n    return {\n      bottomSheetEl,\n      offsetY,\n      isSwiping\n    }\n  }\n}\n</script>\n\n<style>\n.vfm-bottom-sheet {\n  @apply absolute bottom-0 w-full max-h-[90%] overflow-y-auto bg-white rounded-t-xl;\n}\n\n:root {\n  --animate-duration: 0.3s;\n}\n\n@keyframes slideInDown {\n  from {\n    transform: translate3d(0, -100%, 0);\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n.slideInDown {\n  animation-name: slideInDown;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideInLeft {\n  from {\n    transform: translate3d(-100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n.slideInLeft {\n  animation-name: slideInLeft;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideInRight {\n  from {\n    transform: translate3d(100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n.slideInRight {\n  animation-name: slideInRight;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideInUp {\n  from {\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n.slideInUp {\n  animation-name: slideInUp;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideOutDown {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 100%, 0);\n  }\n}\n\n.slideOutDown {\n  animation-name: slideOutDown;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideOutLeft {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(-100%, 0, 0);\n  }\n}\n\n.slideOutLeft {\n  animation-name: slideOutLeft;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideOutRight {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(100%, 0, 0);\n  }\n}\n\n.slideOutRight {\n  animation-name: slideOutRight;\n  animation-duration: var(--animate-duration);\n}\n\n@keyframes slideOutUp {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, -100%, 0);\n  }\n}\n\n.slideOutUp {\n  animation-name: slideOutUp;\n  animation-duration: var(--animate-duration);\n}\n</style>\n","<template>\n  <vue-final-modal\n    :transition=\"{\n      'enter-active-class': 'slideInUp',\n      'leave-active-class': 'slideOutDown'\n    }\"\n  >\n    <div\n      ref=\"bottomSheetEl\"\n      class=\"vfm-bottom-sheet\"\n      :class=\"{ 'vfm-transition': !isSwiping }\"\n      :style=\"{ transform: `translateY(${-offsetY}px)` }\"\n    >\n      <slot></slot>\n    </div>\n  </vue-final-modal>\n</template>\n\n<script>\nimport { ref, watch } from 'vue'\nimport { useSwipe } from '@vueuse/core'\nimport { VueFinalModal } from '../index'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\nconst DIRECTION_TO_CLOSE = 'DOWN'\n\nexport default {\n  components: {\n    VueFinalModal\n  },\n  setup(props, { emit, attrs }) {\n    const bottomSheetEl = ref(null)\n    const offsetY = ref(0)\n    let swipeStart = null\n    let allowSwipe = false\n\n    const { lengthY, direction, isSwiping } = useSwipe(bottomSheetEl, {\n      threshold: 0,\n      onSwipeStart(e) {\n        swipeStart = new Date().getTime()\n        allowSwipe = canSwipe(e.target)\n      },\n      onSwipe() {\n        if (!allowSwipe) return\n        if (direction.value === DIRECTION_TO_CLOSE) {\n          offsetY.value = -clamp(Math.abs(lengthY.value), 0, bottomSheetEl.value.offsetHeight)\n        }\n      },\n      onSwipeEnd(event, direction) {\n        const swipeEnd = new Date().getTime()\n\n        const validDirection = direction === DIRECTION_TO_CLOSE\n        const validDistance = Math.abs(lengthY.value) > LIMIT_DISTANCE * bottomSheetEl.value.offsetHeight\n        const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n        if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n          // eslint-disable-next-line vue/require-explicit-emits\n          emit('update:modelValue', false)\n          return\n        }\n\n        offsetY.value = 0\n      }\n    })\n\n    watch(\n      () => attrs.modelValue,\n      val => {\n        if (val) {\n          offsetY.value = 0\n        }\n      }\n    )\n\n    function canSwipe(target) {\n      const allow = target.scrollTop === 0\n      if (target === bottomSheetEl.value) {\n        return allow\n      } else {\n        return allow && canSwipe(target.parentElement)\n      }\n    }\n\n    return {\n      bottomSheetEl,\n      offsetY,\n      isSwiping\n    }\n  }\n}\n</script>\n\n<style scoped>\n.vfm-bottom-sheet {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  max-height: 90%;\n  overflow-y: auto;\n  background-color: #fff;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n.vfm-transition {\n  transition-property: transform;\n  transition-duration: 150ms;\n}\n\n@keyframes slideInUp {\n  from {\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInUp) {\n  animation-name: slideInUp;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutDown {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 100%, 0);\n  }\n}\n\n:deep(.slideOutDown) {\n  animation-name: slideOutDown;\n  animation-duration: 0.3s;\n}\n</style>\n"],"names":["TransitionState","useTransitionState","state","ref","listeners","beforeEnter","value","afterEnter","beforeLeave","afterLeave","queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","length","event","key","keyCode","isTabPressed","shiftKey","lastElement","firstElement","focus","preventDefault","addEventListener","removeEventListener","focusTrap","useFocusTrap","props","vfmContainer","modalTransitionState","watch","focusRetain","enable","enabled","disable","resizeCursor","t","tr","r","br","b","bl","l","tl","getPosition","e","targetTouches","x","clientX","y","clientY","clamp","min","num","max","Math","trimPx","distance","Number","replace","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","useDragResize","visible","vfmContent","vfmResize","onEvent","resizeVisible","dragResizeStyle","pointerDown","stopPropagation","_state","STATE_RESIZE","STATE_DRAG","direction","target","getAttribute","dragSelector","includes","validDragElement","cacheStyle","rectContainer","getBoundingClientRect","rectContent","isAbsolute","window","getComputedStyle","position","top","left","limit","fitParent","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","body","style","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","s","rectContentEdge","positionOffset","EdgeName","charAt","toUpperCase","slice","directions","_offset","split","forEach","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","removeDragDown","addResizeDown","nextTick","removeResizeDown","val","drag","resize","keepChangedStyle","hasPassiveEvents","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","nodeType","Node","ELEMENT_NODE","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","touches","disableBodyScroll","targetElement","options","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getPropertyValue","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","useLockScroll","handleLockScroll","modelValue","lockScroll","onBeforeUnmount","noop","name","String","Boolean","displayDirective","validator","indexOf","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","hideOverlay","clickToClose","escToClose","nonModal","attach","transition","overlayTransition","zIndexAuto","zIndexBase","zIndex","resizeDirections","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","vfmOverlayTransition","vfmTransition","modalStackIndex","visibility","reactive","modal","overlay","overlayTransitionState","overlayListeners","modalListeners","_stopEvent","lastMousedownEl","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","toggle","mounted","createModalEvent","emitEvent","appendChild","index","api","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","querySelector","eventProps","eventType","stopEvent","stop","show","Promise","resolve","reject","res","err","display","flush","modals","onMounted","remove","onMousedown","onMouseupContainer","onEsc","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","$props","$setup","_createElementBlock","onKeydown","_createVNode","_mergeProps","_toHandlers","_createElementVNode","toString","role","tabindex","onMouseup","_renderSlot","_ctx","_hoisted_2","methods","dynamicModals","closed","beforeClose","rejectClose","beforeOpen","_this","$nextTick","isString","_hoisted_1","_createBlock","component","id","on","on_beforeClose","$options","on_closed","on_beforeOpen","on_opened","opened","slots","slot","_createCommentVNode","innerHTML","ModalInstance","bindApi","_component","assign","markRaw","VueFinalModal","VueFinalModalComponent","shallowReactive","ModalsContainer","ModalsContainerComponent","args","useModal","names","hide","map","get","allSettled","_options","_this2","existModal","createModalInstance","modalInstance","$vfm","DIRECTION_TO_CLOSE","components","attrs","bottomSheetEl","offsetY","swipeStart","allowSwipe","useSwipe","threshold","onSwipeStart","Date","getTime","canSwipe","onSwipe","abs","lengthY","offsetHeight","onSwipeEnd","swipeEnd","validDirection","validDistance","isSwiping","allow"],"mappings":"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"}