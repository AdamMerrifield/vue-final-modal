{"version":3,"file":"VueFinalModal.umd.js","sources":["../src/utils/transitionState.js","../src/utils/focusTrap.js","../src/utils/dragResize.js","../src/utils/bodyScrollLock.js","../src/VueFinalModal.vue","../src/VueFinalModal.vue?vue&type=template&id=72c09f54&lang.js","../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js","../src/ModalsContainer.vue","../src/ModalsContainer.vue?vue&type=template&id=437c4752&lang.js","../src/modalInstance.js","../src/hoc/VBottomSheet.vue","../src/hoc/VFullScreen.vue"],"sourcesContent":["import { ref } from 'vue'\n\nexport const TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport const useTransitionState = () => {\n  const state = ref(null)\n\n  const listeners = {\n    beforeEnter() {\n      state.value = TransitionState.Entering\n    },\n    afterEnter() {\n      state.value = TransitionState.Enter\n    },\n    beforeLeave() {\n      state.value = TransitionState.Leaving\n    },\n    afterLeave() {\n      state.value = TransitionState.Leave\n    }\n  }\n\n  return {\n    state,\n    listeners\n  }\n}\n","import { watch } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  /**\n   * Get last Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  /**\n   * Get first Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get firstElement() {\n    return this.elements[0] || null\n  }\n\n  /**\n   * Get whether the trap is enabled\n   *\n   * @return {boolean} isEnabled\n   */\n  get isEnabled() {\n    return !!this.root\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement)) {\n        this.lastElement.focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement)) {\n      this.firstElement.focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  /**\n   * Enable focus trap\n   *\n   * @param {HTMLElement} root - the focus trap root element\n   */\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  /**\n   * Disable focus trap\n   */\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\n/**\n * @type {FocusTrap | null}\n */\nlet focusTrap = null\n\n/**\n * Get FocusTrap focusTrap\n *\n * @returns {FocusTrap} focusTrap\n */\nexport function useFocusTrap({ props, vfmContainer, modalTransitionState }) {\n  if (focusTrap == null) {\n    focusTrap = new FocusTrap()\n  }\n\n  watch(modalTransitionState, state => {\n    switch (state) {\n      case TransitionState.Enter:\n        if (props.focusRetain || props.focusTrap) {\n          vfmContainer.value.focus()\n        }\n        props.focusTrap && focusTrap.enable(vfmContainer.value)\n        break\n      case TransitionState.Leaving:\n        if (focusTrap.enabled) {\n          focusTrap.disable()\n        }\n        break\n    }\n  })\n\n  return { focusTrap }\n}\n","import { watch, ref, nextTick } from 'vue'\nimport { TransitionState } from './transitionState'\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nconst pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n\nexport function useDragResize({\n  props,\n  visible,\n  vfmContainer,\n  vfmContent,\n  vfmResize,\n  modalTransitionState,\n  onEvent = () => {}\n}) {\n  const resizeVisible = ref(false)\n  const state = ref(null)\n  const dragResizeStyle = ref({})\n\n  watch(modalTransitionState, val => {\n    switch (val) {\n      case TransitionState.Enter:\n        props.drag && addDragDown()\n        props.resize && addResizeDown()\n        break\n      case TransitionState.Leave:\n        if (!props.keepChangedStyle) {\n          dragResizeStyle.value = {}\n        }\n        break\n    }\n  })\n\n  watch(\n    () => props.drag,\n    val => {\n      if (visible.value) {\n        val ? addDragDown() : removeDragDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.resize,\n    val => {\n      if (visible.value) {\n        val ? addResizeDown() : removeResizeDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.keepChangedStyle,\n    val => {\n      if (!val) {\n        dragResizeStyle.value = {}\n      }\n    }\n  )\n\n  function pointerDown(e) {\n    e.stopPropagation()\n    const STATE_RESIZE = 'resize'\n    const STATE_DRAG = 'drag'\n    const direction = e.target.getAttribute('direction')\n    let _state\n    if (direction) {\n      _state = STATE_RESIZE\n    } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n      _state = STATE_DRAG\n    } else {\n      return\n    }\n    state.value = `${_state}:start`\n    onEvent?.(e)\n    const down = getPosition(e)\n    const rectContainer = vfmContainer.value.getBoundingClientRect()\n    const rectContent = vfmContent.value.getBoundingClientRect()\n    const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n    const position = {\n      top: trimPx(dragResizeStyle.value.top),\n      left: trimPx(dragResizeStyle.value.left)\n    }\n    const limit = (() => {\n      if (props.fitParent) {\n        const limit = {\n          absolute() {\n            return {\n              minTop: 0,\n              minLeft: 0,\n              maxTop: rectContainer.height - rectContent.height,\n              maxLeft: rectContainer.width - rectContent.width\n            }\n          },\n          relative() {\n            return {\n              minTop: position.top + rectContainer.top - rectContent.top,\n              minLeft: position.left + rectContainer.left - rectContent.left,\n              maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n              maxLeft: position.left + rectContainer.right - rectContent.right\n            }\n          }\n        }\n        return isAbsolute ? limit.absolute() : limit.relative()\n      } else {\n        return {}\n      }\n    })()\n    const resetBodyCursor = _state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n    const moving = e => {\n      // onPointerMove\n      e.stopPropagation()\n      state.value = `${_state}:move`\n      onEvent?.(e)\n      const move = getPosition(e)\n      let offset = {\n        x: move.x - down.x,\n        y: move.y - down.y\n      }\n      if (_state === STATE_RESIZE) {\n        offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n      }\n\n      let top\n      let left\n      if (isAbsolute) {\n        top = rectContent.top - rectContainer.top + offset.y\n        left = rectContent.left - rectContainer.left + offset.x\n      } else {\n        top = position.top + offset.y\n        left = position.left + offset.x\n      }\n      if (_state === STATE_DRAG && props.fitParent) {\n        top = clamp(limit.minTop, top, limit.maxTop)\n        left = clamp(limit.minLeft, left, limit.maxLeft)\n      }\n      const style = {\n        position: 'relative',\n        top: top + 'px',\n        left: left + 'px',\n        margin: 'unset',\n        touchAction: 'none',\n        ...(isAbsolute && {\n          position: 'absolute',\n          transform: 'unset',\n          width: rectContent.width + 'px',\n          height: rectContent.height + 'px'\n        }),\n        ...(offset.width && { width: offset.width + 'px' }),\n        ...(offset.height && { height: offset.height + 'px' })\n      }\n\n      dragResizeStyle.value = {\n        ...dragResizeStyle.value,\n        ...style\n      }\n    }\n    const end = e => {\n      // onPointerUp\n      e.stopPropagation()\n      if (_state === STATE_RESIZE) {\n        resetBodyCursor && resetBodyCursor()\n      }\n      // Excute onMouseupContainer before trigger onEvent\n      setTimeout(() => {\n        state.value = `${_state}:end`\n        onEvent?.(e)\n      })\n      removeListener('move', document, moving)\n      removeListener('up', document, end)\n    }\n    addListener('move', document, moving)\n    addListener('up', document, end)\n  }\n  function addDragDown() {\n    addListener('down', vfmContent.value, pointerDown)\n    dragResizeStyle.value.touchAction = 'none'\n  }\n  function removeDragDown() {\n    removeListener('down', vfmContent.value, pointerDown)\n  }\n  function addResizeDown() {\n    resizeVisible.value = true\n    nextTick(() => {\n      addListener('down', vfmResize.value, pointerDown)\n    })\n  }\n  function removeResizeDown() {\n    removeListener('down', vfmResize.value, pointerDown)\n    resizeVisible.value = false\n  }\n  function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n    const setOffset = dir => {\n      let offsetAxis = offset[dir.axis]\n      offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n      let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n      offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n      return {\n        [dir.edgeName]: edge,\n        [dir.axis]: offsetAxis\n      }\n    }\n\n    const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n      const rectContentEdge = rectContent[edgeName]\n      const positionOffset = rectContainer[position] - rectContent[position]\n      const EdgeName = capitalize(edgeName)\n      return {\n        axis,\n        edgeName,\n        min: isPositive ? positionOffset : -rectContentEdge,\n        max: isPositive ? rectContentEdge : positionOffset,\n        minEdge: props[`min${EdgeName}`],\n        maxEdge: props[`max${EdgeName}`],\n        getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n        getOffsetAxis: (edge, isAbsolute) => {\n          const offsetAxis = rectContent[edgeName] - edge\n          if (isAbsolute) {\n            return isPositive ? offsetAxis : 0\n          } else {\n            return ((isPositive ? 1 : -1) * offsetAxis) / 2\n          }\n        }\n      }\n    }\n\n    const directions = {\n      t: ['top', 'height', 'y', true],\n      b: ['bottom', 'height', 'y', false],\n      l: ['left', 'width', 'x', true],\n      r: ['right', 'width', 'x', false]\n    }\n\n    let _offset = { x: 0, y: 0 }\n    direction.split('').forEach(dir => {\n      const directionInfo = getDirectionInfo(...directions[dir])\n      _offset = {\n        ..._offset,\n        ...setOffset(directionInfo)\n      }\n    })\n    return _offset\n  }\n\n  return {\n    resizeVisible,\n    state,\n    dragResizeStyle,\n    removeDragDown,\n    removeResizeDown\n  }\n}\n","import { watch, nextTick, onBeforeUnmount } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n\nexport function useLockScroll({ props, vfmContainer, modalTransitionState }) {\n  watch(() => props.lockScroll, handleLockScroll)\n\n  watch(modalTransitionState, state => {\n    if (state === TransitionState.Leave) {\n      enable()\n    }\n  })\n\n  onBeforeUnmount(() => {\n    enable()\n  })\n\n  function handleLockScroll() {\n    if (!props.modelValue) return\n    nextTick(() => {\n      props.lockScroll ? disable() : enable()\n    })\n  }\n\n  function enable() {\n    props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n  }\n\n  function disable() {\n    vfmContainer.value &&\n      disableBodyScroll(vfmContainer.value, {\n        reserveScrollBarGap: true\n      })\n  }\n\n  return { handleLockScroll }\n}\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModalComponent from './VueFinalModal.vue'\nimport ModalsContainerComponent from './ModalsContainer.vue'\nimport { markRaw, reactive, shallowReactive } from 'vue'\n\nexport class ModalInstance {\n  constructor() {\n    const bindApi = component => {\n      const _component = { ...component, props: { ...component.props } }\n      Object.assign(_component.props, {\n        api: { type: Object, default: () => this }\n      })\n      return markRaw(_component)\n    }\n\n    this.modals = []\n    this.openedModals = []\n    this.VueFinalModal = bindApi(VueFinalModalComponent)\n\n    this.dynamicModals = shallowReactive([])\n    this.ModalsContainer = bindApi(ModalsContainerComponent)\n  }\n\n  show(modal, ...args) {\n    switch (typeof modal) {\n      case 'string':\n        return this.toggle(modal, true, ...args)\n      case 'object': {\n        const { show } = this.useModal(modal, args[0])\n        return show()\n      }\n    }\n  }\n\n  hide(...names) {\n    return this.toggle(names, false)\n  }\n\n  hideAll() {\n    return this.hide(...this.openedModals.map(modal => modal.props.name))\n  }\n\n  toggle(name, ...args) {\n    const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n    return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n  }\n\n  get(...names) {\n    return this.modals.filter(modal => names.includes(modal.props.name))\n  }\n\n  existModal(options) {\n    return this.dynamicModals.indexOf(options) !== -1\n  }\n\n  useModal(_options) {\n    let options = reactive({\n      value: false,\n      component: this.VueFinalModal,\n      id: Symbol('useModal'),\n      bind: {},\n      slots: {},\n      on: {},\n      ..._options\n    })\n\n    const show = () => {\n      return this.existModal(options)\n        ? Promise.resolve('[Vue Final Modal] modal is already opened')\n        : new Promise((resolve, reject) => {\n            options.value = true\n            options.reject = reject\n            options.opened = () => {\n              resolve('show')\n            }\n            this.dynamicModals.push(options)\n          })\n    }\n\n    const hide = () => {\n      return this.existModal(options)\n        ? new Promise((resolve, reject) => {\n            options.value = false\n            options.rejectClose = reject\n            options.closed = () => {\n              resolve('hide')\n            }\n          })\n        : Promise.resolve('[Vue Final Modal] modal is already closed')\n    }\n\n    return { show, hide, options }\n  }\n}\n\n/**\n * @description Support create multiple modal instance\n */\nexport const createModalInstance = () => {\n  let modalInstance = new ModalInstance()\n  return {\n    $vfm: modalInstance,\n    VueFinalModal: modalInstance.VueFinalModal,\n    ModalsContainer: modalInstance.ModalsContainer,\n    useModal: modalInstance.useModal.bind(modalInstance)\n  }\n}\n\n/**\n * @description Create modal instance by default for directly support `import { $vfm, VueFinalModal, ModalsContainer, useModal } from 'vue-final-modal'`\n */\nconst modalInstance = createModalInstance()\n\nexport const { $vfm, VueFinalModal, ModalsContainer, useModal } = modalInstance\n","<template>\n  <vue-final-modal\n    :transition=\"{\n      'enter-active-class': 'slideInDown',\n      'leave-active-class': 'slideOutDown'\n    }\"\n  >\n    <div\n      ref=\"bottomSheetEl\"\n      class=\"vfm-bottom-sheet\"\n      :class=\"{ 'vfm-transition': !isSwiping }\"\n      :style=\"{ transform: `translateY(${-offsetY}px)` }\"\n    >\n      <slot></slot>\n    </div>\n  </vue-final-modal>\n</template>\n\n<script setup>\nimport { ref, useAttrs, watch } from 'vue'\nimport { useSwipe } from '@vueuse/core'\nimport { VueFinalModal } from '../index'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\nconst DIRECTION_TO_CLOSE = 'DOWN'\n\nconst attrs = useAttrs()\nconst emit = defineEmits()\n\nconst bottomSheetEl = ref(null)\nconst offsetY = ref(0)\nlet swipeStart = null\nlet allowSwipe = false\n\nconst { lengthY, direction, isSwiping } = useSwipe(bottomSheetEl, {\n  threshold: 0,\n  onSwipeStart(e) {\n    swipeStart = new Date().getTime()\n    allowSwipe = canSwipe(e.target)\n  },\n  onSwipe() {\n    if (!allowSwipe) return\n    if (direction.value === DIRECTION_TO_CLOSE) {\n      offsetY.value = -clamp(Math.abs(lengthY.value), 0, bottomSheetEl.value.offsetHeight)\n    }\n  },\n  onSwipeEnd(event, direction) {\n    const swipeEnd = new Date().getTime()\n\n    const validDirection = direction === DIRECTION_TO_CLOSE\n    const validDistance = Math.abs(lengthY.value) > LIMIT_DISTANCE * bottomSheetEl.value.offsetHeight\n    const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n    if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n      // eslint-disable-next-line vue/require-explicit-emits\n      emit('update:modelValue', false)\n      return\n    }\n\n    offsetY.value = 0\n  }\n})\n\nwatch(\n  () => attrs.modelValue,\n  val => {\n    if (val) {\n      offsetY.value = 0\n    }\n  }\n)\n\nfunction canSwipe(target) {\n  const allow = target.scrollTop === 0\n  if (target === bottomSheetEl.value) {\n    return allow\n  } else {\n    return allow && canSwipe(target.parentElement)\n  }\n}\n</script>\n\n<style scoped>\n.vfm-bottom-sheet {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  max-height: 90%;\n  overflow-y: auto;\n  background-color: #fff;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n.vfm-transition {\n  transition-property: transform;\n  transition-duration: 150ms;\n}\n\n@keyframes slideInDown {\n  from {\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInDown) {\n  animation-name: slideInDown;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutDown {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 100%, 0);\n  }\n}\n\n:deep(.slideOutDown) {\n  animation-name: slideOutDown;\n  animation-duration: 0.3s;\n}\n</style>\n","<template>\n  <vue-final-modal v-bind=\"attrs\" hide-overlay :transition=\"transition\">\n    <div\n      ref=\"modalContent\"\n      class=\"vfm-full-screen\"\n      :class=\"{ 'vfm-transition': !isSwiping }\"\n      :style=\"{ transform: `translateX(${-offsetX}px)` }\"\n    >\n      <slot></slot>\n    </div>\n  </vue-final-modal>\n</template>\n\n<script>\nexport default {\n  inheritAttrs: false\n}\n</script>\n\n<script setup>\nimport { computed, ref, useAttrs, watch } from 'vue'\nimport { useSwipe } from '@vueuse/core'\nimport { VueFinalModal } from '../modalInstance'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\n\nconst props = defineProps({\n  swipeToCloseDirection: {\n    type: String,\n    default: '',\n    validator(val) {\n      return ['', 'RIGHT', 'LEFT'].includes(val) !== -1\n    }\n  }\n})\n\nconst attrs = useAttrs()\nconst emit = defineEmits()\n\nconst modalContent = ref(null)\nconst offsetX = ref(0)\nlet swipeStart = null\nlet allowSwipe = false\n\nconst transition = computed(() => {\n  if (props.swipeToCloseDirection) {\n    return {\n      'enter-active-class': props.swipeToCloseDirection === 'RIGHT' ? 'slideInRight' : 'slideInLeft',\n      'leave-active-class': props.swipeToCloseDirection === 'RIGHT' ? 'slideOutRight' : 'slideOutLeft'\n    }\n  } else {\n    return {}\n  }\n})\n\nconst { lengthX, direction, isSwiping } = props.swipeToCloseDirection\n  ? useSwipe(modalContent, {\n      threshold: 0,\n      onSwipeStart(e) {\n        swipeStart = new Date().getTime()\n        allowSwipe = canSwipe(e.target)\n      },\n      onSwipe() {\n        if (!allowSwipe) return\n        if (direction.value === props.swipeToCloseDirection) {\n          const _offsetX = clamp(Math.abs(lengthX.value), 0, modalContent.value.offsetWidth)\n          offsetX.value = props.swipeToCloseDirection === 'RIGHT' ? -_offsetX : _offsetX\n        }\n      },\n      onSwipeEnd(event, direction) {\n        const swipeEnd = new Date().getTime()\n\n        const validDirection = direction === props.swipeToCloseDirection\n        const validDistance = Math.abs(lengthX.value) > LIMIT_DISTANCE * modalContent.value.offsetWidth\n        const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n        if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n          // eslint-disable-next-line vue/require-explicit-emits\n          emit('update:modelValue', false)\n          return\n        }\n\n        offsetX.value = 0\n      }\n    })\n  : {}\n\nwatch(\n  () => attrs.modelValue,\n  val => {\n    if (val) {\n      offsetX.value = 0\n    }\n  }\n)\n\nfunction canSwipe(target) {\n  const allow = target.scrollLeft === 0\n  if (target === modalContent.value) {\n    return allow\n  } else {\n    return allow && canSwipe(target.parentElement)\n  }\n}\n</script>\n\n<style scoped>\n.vfm-full-screen {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  background-color: #fff;\n}\n\n.vfm-transition {\n  transition-property: transform;\n  transition-duration: 0.3s;\n}\n\n:deep(.vfm__content) {\n  width: 100%;\n  height: 100%;\n}\n\n@keyframes slideInLeft {\n  from {\n    transform: translate3d(-100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInLeft) {\n  animation-name: slideInLeft;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideInRight {\n  from {\n    transform: translate3d(100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInRight) {\n  animation-name: slideInRight;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutLeft {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(-100%, 0, 0);\n  }\n}\n\n:deep(.slideOutLeft) {\n  animation-name: slideOutLeft;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutRight {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(100%, 0, 0);\n  }\n}\n\n:deep(.slideOutRight) {\n  animation-name: slideOutRight;\n  animation-duration: 0.3s;\n}\n</style>\n"],"names":["TransitionState","useTransitionState","state","ref","listeners","beforeEnter","value","afterEnter","beforeLeave","afterLeave","isFocused","element","document","activeElement","FocusTrap","constructor","this","root","elements","onKeyDown","bind","lastElement","length","firstElement","isEnabled","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","enable","selector","querySelectorAll","addEventListener","disable","removeEventListener","focusTrap","useFocusTrap","props","vfmContainer","modalTransitionState","watch","focusRetain","enabled","resizeCursor","t","tr","r","br","b","bl","l","tl","getPosition","e","clientX","x","clientY","y","targetTouches","clamp","min","num","max","Math","trimPx","distance","Number","replace","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","useDragResize","visible","vfmContent","vfmResize","onEvent","resizeVisible","dragResizeStyle","pointerDown","stopPropagation","STATE_RESIZE","STATE_DRAG","direction","target","getAttribute","_state","dragSelector","includes","validDragElement","rectContainer","getBoundingClientRect","rectContent","isAbsolute","window","getComputedStyle","position","top","left","limit","fitParent","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","cacheStyle","style","setStyle","body","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","rectContentEdge","positionOffset","EdgeName","s","charAt","toUpperCase","slice","directions","_offset","split","forEach","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","removeDragDown","addResizeDown","nextTick","removeResizeDown","val","drag","resize","keepChangedStyle","hasPassiveEvents","passiveTestOptions","isIosDevice","navigator","platform","test","maxTouchPoints","previousBodyOverflowSetting","previousBodyPaddingRight","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","nodeType","Node","ELEMENT_NODE","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","touches","disableBodyScroll","targetElement","options","console","error","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getPropertyValue","paddingRight","overflow","setOverflowHidden","enableBodyScroll","filter","useLockScroll","handleLockScroll","modelValue","lockScroll","onBeforeUnmount","noop","name","String","default","Boolean","displayDirective","validator","indexOf","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","hideOverlay","clickToClose","escToClose","nonModal","attach","transition","overlayTransition","zIndexAuto","zIndexBase","zIndex","resizeDirections","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","vfmOverlayTransition","vfmTransition","modalStackIndex","visibility","reactive","modal","overlay","overlayTransitionState","overlayListeners","modalListeners","_stopEvent","lastMousedownEl","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","toggle","mounted","createModalEvent","emitEvent","appendChild","index","api","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","querySelector","eventProps","eventType","stopEvent","stop","show","Promise","resolve","reject","res","err","display","flush","modals","onMounted","remove","onMousedown","onMouseupContainer","onEsc","class","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","$props","$setup","_createElementBlock","onKeydown","_createVNode","_mergeProps","_toHandlers","_createElementVNode","toString","role","tabindex","onMouseup","_renderSlot","_ctx","_hoisted_2","methods","dynamicModals","closed","beforeClose","rejectClose","beforeOpen","$nextTick","isString","_hoisted_1","_createBlock","component","id","on","on_beforeClose","$options","on_closed","on_beforeOpen","on_opened","opened","slots","slot","_createCommentVNode","innerHTML","ModalInstance","bindApi","_component","assign","markRaw","VueFinalModal","VueFinalModalComponent","shallowReactive","ModalsContainer","ModalsContainerComponent","args","useModal","hide","names","hideAll","map","get","allSettled","existModal","_options","createModalInstance","modalInstance","$vfm","DIRECTION_TO_CLOSE","attrs","useAttrs","bottomSheetEl","offsetY","swipeStart","allowSwipe","lengthY","isSwiping","useSwipe","threshold","onSwipeStart","Date","getTime","canSwipe","onSwipe","abs","offsetHeight","onSwipeEnd","swipeEnd","validDirection","validDistance","allow","inheritAttrs","modalContent","offsetX","swipeToCloseDirection","lengthX","_offsetX","offsetWidth","scrollLeft"],"mappings":"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"}