{"version":3,"file":"VueFinalModal.umd.js","sources":["../src/utils/transitionState.js","../src/utils/focusTrap.js","../src/utils/dom.js","../src/utils/dragResize.js","../src/utils/bodyScrollLock.js","../src/VueFinalModal.vue","../src/VueFinalModal.vue?vue&type=template&id=72c09f54&lang.js","../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js","../src/ModalsContainer.vue","../src/ModalsContainer.vue?vue&type=template&id=437c4752&lang.js","../src/modalInstance.js","../src/utils/swipeable.js","../src/hoc/VBottomSheet.vue","../src/hoc/VFullScreen.vue"],"sourcesContent":["import { ref } from 'vue'\n\nexport const TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nexport const useTransitionState = () => {\n  const state = ref(null)\n\n  const listeners = {\n    beforeEnter() {\n      state.value = TransitionState.Entering\n    },\n    afterEnter() {\n      state.value = TransitionState.Enter\n    },\n    beforeLeave() {\n      state.value = TransitionState.Leaving\n    },\n    afterLeave() {\n      state.value = TransitionState.Leave\n    }\n  }\n\n  return {\n    state,\n    listeners\n  }\n}\n","import { watch } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  /**\n   * Get last Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  /**\n   * Get first Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get firstElement() {\n    return this.elements[0] || null\n  }\n\n  /**\n   * Get whether the trap is enabled\n   *\n   * @return {boolean} isEnabled\n   */\n  get isEnabled() {\n    return !!this.root\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement)) {\n        this.lastElement.focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement)) {\n      this.firstElement.focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  /**\n   * Enable focus trap\n   *\n   * @param {HTMLElement} root - the focus trap root element\n   */\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  /**\n   * Disable focus trap\n   */\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\n/**\n * @type {FocusTrap | null}\n */\nlet focusTrap = null\n\n/**\n * Get FocusTrap focusTrap\n *\n * @returns {FocusTrap} focusTrap\n */\nexport function useFocusTrap({ props, vfmContainer, modalTransitionState }) {\n  if (focusTrap == null) {\n    focusTrap = new FocusTrap()\n  }\n\n  watch(modalTransitionState, state => {\n    switch (state) {\n      case TransitionState.Enter:\n        if (props.focusRetain || props.focusTrap) {\n          vfmContainer.value.focus()\n        }\n        props.focusTrap && focusTrap.enable(vfmContainer.value)\n        break\n      case TransitionState.Leaving:\n        if (focusTrap.enabled) {\n          focusTrap.disable()\n        }\n        break\n    }\n  })\n\n  return { focusTrap }\n}\n","export const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\n\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n\nexport function checkPassiveEventSupport(document) {\n  const noop = () => {}\n  if (!document) return false\n  let supportsPassive = false\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true\n      return false\n    }\n  }\n  document.addEventListener('x', noop, optionsBlock)\n  document.removeEventListener('x', noop)\n  return supportsPassive\n}\n","import { watch, ref, nextTick } from 'vue'\nimport { TransitionState } from './transitionState'\nimport { addListener, removeListener, getPosition } from './dom'\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nexport function useDragResize({\n  props,\n  visible,\n  vfmContainer,\n  vfmContent,\n  vfmResize,\n  modalTransitionState,\n  onEvent = () => {}\n}) {\n  const resizeVisible = ref(false)\n  const state = ref(null)\n  const dragResizeStyle = ref({})\n\n  watch(modalTransitionState, val => {\n    switch (val) {\n      case TransitionState.Enter:\n        props.drag && addDragDown()\n        props.resize && addResizeDown()\n        break\n      case TransitionState.Leave:\n        if (!props.keepChangedStyle) {\n          dragResizeStyle.value = {}\n        }\n        break\n    }\n  })\n\n  watch(\n    () => props.drag,\n    val => {\n      if (visible.value) {\n        val ? addDragDown() : removeDragDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.resize,\n    val => {\n      if (visible.value) {\n        val ? addResizeDown() : removeResizeDown()\n      }\n    }\n  )\n\n  watch(\n    () => props.keepChangedStyle,\n    val => {\n      if (!val) {\n        dragResizeStyle.value = {}\n      }\n    }\n  )\n\n  function pointerDown(e) {\n    e.stopPropagation()\n    const STATE_RESIZE = 'resize'\n    const STATE_DRAG = 'drag'\n    const direction = e.target.getAttribute('direction')\n    let _state\n    if (direction) {\n      _state = STATE_RESIZE\n    } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n      _state = STATE_DRAG\n    } else {\n      return\n    }\n    state.value = `${_state}:start`\n    onEvent?.(e)\n    const down = getPosition(e)\n    const rectContainer = vfmContainer.value.getBoundingClientRect()\n    const rectContent = vfmContent.value.getBoundingClientRect()\n    const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n    const position = {\n      top: trimPx(dragResizeStyle.value.top),\n      left: trimPx(dragResizeStyle.value.left)\n    }\n    const limit = (() => {\n      if (props.fitParent) {\n        const limit = {\n          absolute() {\n            return {\n              minTop: 0,\n              minLeft: 0,\n              maxTop: rectContainer.height - rectContent.height,\n              maxLeft: rectContainer.width - rectContent.width\n            }\n          },\n          relative() {\n            return {\n              minTop: position.top + rectContainer.top - rectContent.top,\n              minLeft: position.left + rectContainer.left - rectContent.left,\n              maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n              maxLeft: position.left + rectContainer.right - rectContent.right\n            }\n          }\n        }\n        return isAbsolute ? limit.absolute() : limit.relative()\n      } else {\n        return {}\n      }\n    })()\n    const resetBodyCursor = _state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n    const moving = e => {\n      // onPointerMove\n      e.stopPropagation()\n      state.value = `${_state}:move`\n      onEvent?.(e)\n      const move = getPosition(e)\n      let offset = {\n        x: move.x - down.x,\n        y: move.y - down.y\n      }\n      if (_state === STATE_RESIZE) {\n        offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n      }\n\n      let top\n      let left\n      if (isAbsolute) {\n        top = rectContent.top - rectContainer.top + offset.y\n        left = rectContent.left - rectContainer.left + offset.x\n      } else {\n        top = position.top + offset.y\n        left = position.left + offset.x\n      }\n      if (_state === STATE_DRAG && props.fitParent) {\n        top = clamp(limit.minTop, top, limit.maxTop)\n        left = clamp(limit.minLeft, left, limit.maxLeft)\n      }\n      const style = {\n        position: 'relative',\n        top: top + 'px',\n        left: left + 'px',\n        margin: 'unset',\n        touchAction: 'none',\n        ...(isAbsolute && {\n          position: 'absolute',\n          transform: 'unset',\n          width: rectContent.width + 'px',\n          height: rectContent.height + 'px'\n        }),\n        ...(offset.width && { width: offset.width + 'px' }),\n        ...(offset.height && { height: offset.height + 'px' })\n      }\n\n      dragResizeStyle.value = {\n        ...dragResizeStyle.value,\n        ...style\n      }\n    }\n    const end = e => {\n      // onPointerUp\n      e.stopPropagation()\n      if (_state === STATE_RESIZE) {\n        resetBodyCursor && resetBodyCursor()\n      }\n      // Excute onMouseupContainer before trigger onEvent\n      setTimeout(() => {\n        state.value = `${_state}:end`\n        onEvent?.(e)\n      })\n      removeListener('move', document, moving)\n      removeListener('up', document, end)\n    }\n    addListener('move', document, moving)\n    addListener('up', document, end)\n  }\n  function addDragDown() {\n    addListener('down', vfmContent.value, pointerDown)\n    dragResizeStyle.value.touchAction = 'none'\n  }\n  function removeDragDown() {\n    removeListener('down', vfmContent.value, pointerDown)\n  }\n  function addResizeDown() {\n    resizeVisible.value = true\n    nextTick(() => {\n      addListener('down', vfmResize.value, pointerDown)\n    })\n  }\n  function removeResizeDown() {\n    removeListener('down', vfmResize.value, pointerDown)\n    resizeVisible.value = false\n  }\n  function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n    const setOffset = dir => {\n      let offsetAxis = offset[dir.axis]\n      offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n      let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n      offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n      return {\n        [dir.edgeName]: edge,\n        [dir.axis]: offsetAxis\n      }\n    }\n\n    const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n      const rectContentEdge = rectContent[edgeName]\n      const positionOffset = rectContainer[position] - rectContent[position]\n      const EdgeName = capitalize(edgeName)\n      return {\n        axis,\n        edgeName,\n        min: isPositive ? positionOffset : -rectContentEdge,\n        max: isPositive ? rectContentEdge : positionOffset,\n        minEdge: props[`min${EdgeName}`],\n        maxEdge: props[`max${EdgeName}`],\n        getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n        getOffsetAxis: (edge, isAbsolute) => {\n          const offsetAxis = rectContent[edgeName] - edge\n          if (isAbsolute) {\n            return isPositive ? offsetAxis : 0\n          } else {\n            return ((isPositive ? 1 : -1) * offsetAxis) / 2\n          }\n        }\n      }\n    }\n\n    const directions = {\n      t: ['top', 'height', 'y', true],\n      b: ['bottom', 'height', 'y', false],\n      l: ['left', 'width', 'x', true],\n      r: ['right', 'width', 'x', false]\n    }\n\n    let _offset = { x: 0, y: 0 }\n    direction.split('').forEach(dir => {\n      const directionInfo = getDirectionInfo(...directions[dir])\n      _offset = {\n        ..._offset,\n        ...setOffset(directionInfo)\n      }\n    })\n    return _offset\n  }\n\n  return {\n    resizeVisible,\n    state,\n    dragResizeStyle,\n    removeDragDown,\n    removeResizeDown\n  }\n}\n","import { watch, nextTick, onBeforeUnmount } from 'vue'\nimport { TransitionState } from './transitionState'\n\n// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n\nexport function useLockScroll({ props, vfmContainer, modalTransitionState }) {\n  watch(() => props.lockScroll, handleLockScroll)\n\n  watch(modalTransitionState, state => {\n    if (state === TransitionState.Leave) {\n      enable()\n    }\n  })\n\n  onBeforeUnmount(() => {\n    enable()\n  })\n\n  function handleLockScroll() {\n    if (!props.modelValue) return\n    nextTick(() => {\n      props.lockScroll ? disable() : enable()\n    })\n  }\n\n  function enable() {\n    props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n  }\n\n  function disable() {\n    vfmContainer.value &&\n      disableBodyScroll(vfmContainer.value, {\n        reserveScrollBarGap: true\n      })\n  }\n\n  return { handleLockScroll }\n}\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    v-bind=\"$attrs\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  inheritAttrs: false,\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"displayDirective !== 'if' || visible\"\n    v-show=\"displayDirective !== 'show' || visible\"\n    v-bind=\"$attrs\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': nonModal }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition v-bind=\"computedOverlayTransition\" v-on=\"overlayListeners\">\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition v-bind=\"computedTransition\" v-on=\"modalListeners\">\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': nonModal }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"resizeVisible && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport { useDragResize } from './utils/dragResize.js'\nimport { useLockScroll } from './utils/bodyScrollLock'\nimport { TransitionState, useTransitionState } from './utils/transitionState'\n\nconst noop = () => {}\n\nexport default {\n  inheritAttrs: false,\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    displayDirective: {\n      type: String,\n      default: 'show',\n      validator(val) {\n        return ['if', 'show'].indexOf(val) !== -1\n      }\n    },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    nonModal: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: [Number, String], default: 0 },\n    minHeight: { type: [Number, String], default: 0 },\n    maxWidth: { type: [Number, String], default: Infinity },\n    maxHeight: { type: [Number, String], default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    '_before-close',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false\n    })\n\n    const { state: overlayTransitionState, listeners: overlayListeners } = useTransitionState()\n    const { state: modalTransitionState, listeners: modalListeners } = useTransitionState()\n\n    const _stopEvent = ref(false)\n\n    const { focusTrap } = useFocusTrap({\n      props,\n      vfmContainer,\n      modalTransitionState\n    })\n\n    const { resizeVisible, state, dragResizeStyle, removeDragDown, removeResizeDown } = useDragResize({\n      props,\n      visible,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      modalTransitionState,\n      onEvent(e) {\n        emit(state.value, e)\n      }\n    })\n\n    const { handleLockScroll } = useLockScroll({ props, vfmContainer, modalTransitionState })\n\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          emit('_before-close', createModalEvent({ type: '_before-close' }))\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n\n    watch(() => props.attach, mounted)\n\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n\n    /**\n     * Side effect about modal transtion state update\n     */\n    watch(modalTransitionState, state => {\n      switch (state) {\n        case TransitionState.Enter:\n          emit('_opened')\n          emit('opened', createModalEvent({ type: 'opened' }))\n          resolveToggle('show')\n          break\n        case TransitionState.Leave:\n          modalStackIndex.value = null\n\n          emit('_closed')\n          emit('closed', createModalEvent({ type: 'closed' }))\n          resolveToggle('hide')\n          break\n      }\n    })\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n\n    onBeforeUnmount(() => {\n      close()\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        toggle\n      }\n    }\n\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          props.attach !== false && target.appendChild(root.value)\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                vm.visibility.overlay = false\n              }\n            })\n\n          visible.value = true\n          nextTick(() => {\n            startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            focusTrap.enable($_vm.vfmContainer.value)\n            focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      state.value = null\n\n      startTransitionLeave()\n    }\n\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n\n    function toggle(show) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        emit('update:modelValue', value)\n      })\n    }\n\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      overlayListeners,\n      modalListeners,\n      visible,\n      visibility,\n      resizeVisible,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_beforeClose=\"beforeClose(modal)\"\n      @_closed=\"closed(index, modal)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal, index)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    closed(index, modal) {\n      this.slice(index)\n      modal.closed && modal.closed()\n    },\n    beforeClose(modal) {\n      if (modal.value) {\n        modal?.rejectClose('hide')\n      }\n    },\n    async beforeOpen(e, modal, index) {\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal?.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModalComponent from './VueFinalModal.vue'\nimport ModalsContainerComponent from './ModalsContainer.vue'\nimport { markRaw, reactive, shallowReactive } from 'vue'\n\nexport class ModalInstance {\n  constructor() {\n    const bindApi = component => {\n      const _component = { ...component, props: { ...component.props } }\n      Object.assign(_component.props, {\n        api: { type: Object, default: () => this }\n      })\n      return markRaw(_component)\n    }\n\n    this.modals = []\n    this.openedModals = []\n    this.VueFinalModal = bindApi(VueFinalModalComponent)\n\n    this.dynamicModals = shallowReactive([])\n    this.ModalsContainer = bindApi(ModalsContainerComponent)\n  }\n\n  show(modal, ...args) {\n    switch (typeof modal) {\n      case 'string':\n        return this.toggle(modal, true, ...args)\n      case 'object': {\n        const { show } = this.useModal(modal, args[0])\n        return show()\n      }\n    }\n  }\n\n  hide(...names) {\n    return this.toggle(names, false)\n  }\n\n  hideAll() {\n    return this.hide(...this.openedModals.map(modal => modal.props.name))\n  }\n\n  toggle(name, ...args) {\n    const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n    return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n  }\n\n  get(...names) {\n    return this.modals.filter(modal => names.includes(modal.props.name))\n  }\n\n  existModal(options) {\n    return this.dynamicModals.indexOf(options) !== -1\n  }\n\n  useModal(_options) {\n    let options = reactive({\n      value: false,\n      component: this.VueFinalModal,\n      id: Symbol('useModal'),\n      bind: {},\n      slots: {},\n      on: {},\n      ..._options\n    })\n\n    const show = () => {\n      return this.existModal(options)\n        ? Promise.resolve('[Vue Final Modal] modal is already opened')\n        : new Promise((resolve, reject) => {\n            options.value = true\n            options.reject = reject\n            options.opened = () => {\n              resolve('show')\n            }\n            this.dynamicModals.push(options)\n          })\n    }\n\n    const hide = () => {\n      return this.existModal(options)\n        ? new Promise((resolve, reject) => {\n            options.value = false\n            options.rejectClose = reject\n            options.closed = () => {\n              resolve('hide')\n            }\n          })\n        : Promise.resolve('[Vue Final Modal] modal is already closed')\n    }\n\n    return { show, hide, options }\n  }\n}\n\n/**\n * @description Support create multiple modal instance\n */\nexport const createModalInstance = () => {\n  let modalInstance = new ModalInstance()\n  return {\n    $vfm: modalInstance,\n    VueFinalModal: modalInstance.VueFinalModal,\n    ModalsContainer: modalInstance.ModalsContainer,\n    useModal: modalInstance.useModal.bind(modalInstance)\n  }\n}\n\n/**\n * @description Create modal instance by default for directly support `import { $vfm, VueFinalModal, ModalsContainer, useModal } from 'vue-final-modal'`\n */\nconst modalInstance = createModalInstance()\n\nexport const { $vfm, VueFinalModal, ModalsContainer, useModal } = modalInstance\n","import { computed, reactive, ref } from 'vue'\nimport { getPosition, checkPassiveEventSupport } from './dom'\nimport { useEventListener } from '@vueuse/core'\n\nconst SwipeDirection = {\n  UP: 'UP',\n  RIGHT: 'RIGHT',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  NONE: 'NONE'\n}\n\nexport function useSwipeable(el, { threshold = 50, onSwipeStart, onSwipe, onSwipeEnd, passive = true }) {\n  const coordsStart = reactive({ x: 0, y: 0 })\n  const coordsEnd = reactive({ x: 0, y: 0 })\n\n  const diffX = computed(() => coordsStart.x - coordsEnd.x)\n  const diffY = computed(() => coordsStart.y - coordsEnd.y)\n\n  const { max, abs } = Math\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold)\n  const isSwiping = ref(false)\n\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value) return SwipeDirection.NONE\n\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n    } else {\n      return diffY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN\n    }\n  })\n\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x\n    coordsStart.y = y\n  }\n\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x\n    coordsEnd.y = y\n  }\n\n  let listenerOptions\n\n  const isPassiveEventSupported = checkPassiveEventSupport(window?.document)\n\n  if (!passive) {\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true }\n  } else {\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false }\n  }\n\n  let events\n  function pointerStart(e) {\n    if (listenerOptions.capture && !listenerOptions.passive) {\n      e.preventDefault()\n    }\n    const { x, y } = getPosition(e)\n    updateCoordsStart(x, y)\n    updateCoordsEnd(x, y)\n    onSwipeStart?.(e)\n\n    events = [\n      useEventListener(el, 'mousemove', pointerMove, listenerOptions),\n      useEventListener(el, 'touchmove', pointerMove, listenerOptions),\n      useEventListener(el, 'mouseup', pointerEnd, listenerOptions),\n      useEventListener(el, 'touchend', pointerEnd, listenerOptions),\n      useEventListener(el, 'touchcancel', pointerEnd, listenerOptions)\n    ]\n  }\n\n  function pointerMove(e) {\n    const { x, y } = getPosition(e)\n    updateCoordsEnd(x, y)\n    if (!isSwiping.value && isThresholdExceeded.value) {\n      isSwiping.value = true\n    }\n    if (isSwiping.value) {\n      onSwipe?.(e)\n    }\n  }\n\n  function pointerEnd(e) {\n    if (isSwiping.value) {\n      onSwipeEnd?.(e, direction.value)\n    }\n\n    isSwiping.value = false\n\n    events.forEach(s => s())\n  }\n\n  const stops = [\n    useEventListener(el, 'mousedown', pointerStart, listenerOptions),\n    useEventListener(el, 'touchstart', pointerStart, listenerOptions)\n  ]\n\n  const stop = () => {\n    stops.forEach(s => s())\n    events.forEach(s => s())\n  }\n\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  }\n}\n","<template>\n  <vue-final-modal\n    v-bind=\"attrs\"\n    :transition=\"{\n      'enter-active-class': 'slideInDown',\n      'leave-active-class': 'slideOutDown'\n    }\"\n    @mousedown.stop\n    @touchstart.stop.passive\n  >\n    <slot name=\"prepend\"></slot>\n    <div\n      ref=\"bottomSheetEl\"\n      class=\"vfm-bottom-sheet\"\n      :class=\"{ 'vfm-transition': !isSwiping }\"\n      :style=\"{ transform: `translateY(${-offsetY}px)` }\"\n    >\n      <slot></slot>\n    </div>\n    <slot name=\"append\"></slot>\n  </vue-final-modal>\n</template>\n\n<script>\nexport default {\n  inheritAttrs: false\n}\n</script>\n\n<script setup>\nimport { ref, useAttrs, watch } from 'vue'\nimport { useSwipeable } from '../utils/swipeable'\nimport { VueFinalModal } from '../modalInstance'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\n\nconst props = defineProps({\n  swipeToCloseDirection: {\n    type: String,\n    default: '',\n    validator(val) {\n      return ['', 'DOWN'].includes(val) !== -1\n    }\n  }\n})\n\nconst attrs = useAttrs()\nconst emit = defineEmits()\n\nconst bottomSheetEl = ref(null)\nconst offsetY = ref(0)\nlet swipeStart = null\nlet allowSwipe = false\n\nconst { lengthY, direction, isSwiping } = useSwipeable(bottomSheetEl, {\n  threshold: 0,\n  onSwipeStart(e) {\n    swipeStart = new Date().getTime()\n    allowSwipe = canSwipe(e.target)\n  },\n  onSwipe() {\n    if (!allowSwipe) return\n    if (direction.value === props.swipeToCloseDirection) {\n      offsetY.value = -clamp(Math.abs(lengthY.value), 0, bottomSheetEl.value.offsetHeight)\n    }\n  },\n  onSwipeEnd(event, direction) {\n    const swipeEnd = new Date().getTime()\n\n    const validDirection = direction === props.swipeToCloseDirection\n    const validDistance = Math.abs(lengthY.value) > LIMIT_DISTANCE * bottomSheetEl.value.offsetHeight\n    const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n    if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n      // eslint-disable-next-line vue/require-explicit-emits\n      emit('update:modelValue', false)\n      if (document.activeElement) {\n        document.activeElement.blur()\n      }\n      return\n    }\n\n    offsetY.value = 0\n  }\n})\n\nwatch(\n  () => attrs.modelValue,\n  val => {\n    if (val) {\n      offsetY.value = 0\n    }\n  }\n)\n\nfunction canSwipe(target) {\n  const allow = target.scrollTop === 0\n  if (target === bottomSheetEl.value) {\n    return allow\n  } else {\n    return allow && canSwipe(target.parentElement)\n  }\n}\n</script>\n\n<style scoped>\n.vfm-bottom-sheet {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  max-height: 90%;\n  overflow-y: auto;\n  background-color: #fff;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n.vfm-transition {\n  transition-property: transform;\n  transition-duration: 150ms;\n}\n\n@keyframes slideInDown {\n  from {\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInDown) {\n  animation-name: slideInDown;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutDown {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 100%, 0);\n  }\n}\n\n:deep(.slideOutDown) {\n  animation-name: slideOutDown;\n  animation-duration: 0.3s;\n}\n</style>\n","<template>\n  <vue-final-modal\n    v-bind=\"attrs\"\n    hide-overlay\n    :transition=\"transition\"\n    :content-style=\"[{ transform: `translateX(${-offsetX}px)` }]\"\n    :content-class=\"{ 'vfm-transition': !isSwiping }\"\n    @mousedown.stop\n    @touchstart.stop.passive\n  >\n    <slot name=\"prepend\"></slot>\n    <div ref=\"modalContent\" class=\"vfm-full-screen\" :class=\"fullScreenClass\" :style=\"fullScreenStyle\">\n      <slot></slot>\n    </div>\n    <slot name=\"append\"></slot>\n  </vue-final-modal>\n</template>\n\n<script>\nexport default {\n  inheritAttrs: false\n}\n</script>\n\n<script setup>\nimport { computed, ref, useAttrs, watch } from 'vue'\nimport { useSwipeable } from '../utils/swipeable'\nimport { VueFinalModal } from '../modalInstance'\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val\n}\n\nconst LIMIT_DISTANCE = 0.1\nconst LIMIT_SPEED = 300\n\nconst props = defineProps({\n  fullScreenClass: { type: [String, Object, Array], default: '' },\n  fullScreenStyle: { type: [Object, Array], default: () => ({}) },\n  swipeToCloseDirection: {\n    type: String,\n    default: '',\n    validator(val) {\n      return ['', 'RIGHT', 'LEFT'].includes(val) !== -1\n    }\n  }\n})\n\nconst attrs = useAttrs()\nconst emit = defineEmits()\n\nconst modalContent = ref(null)\nconst offsetX = ref(0)\nlet swipeStart = null\nlet allowSwipe = false\n\nconst transition = computed(() => {\n  if (props.swipeToCloseDirection) {\n    return {\n      'enter-active-class': props.swipeToCloseDirection === 'RIGHT' ? 'slideInRight' : 'slideInLeft',\n      'leave-active-class': props.swipeToCloseDirection === 'RIGHT' ? 'slideOutRight' : 'slideOutLeft'\n    }\n  } else {\n    return {}\n  }\n})\n\nconst { lengthX, direction, isSwiping } = props.swipeToCloseDirection\n  ? useSwipeable(modalContent, {\n      threshold: 0,\n      onSwipeStart(e) {\n        swipeStart = new Date().getTime()\n        allowSwipe = canSwipe(e.target)\n      },\n      onSwipe() {\n        if (!allowSwipe) return\n        if (direction.value === props.swipeToCloseDirection) {\n          const _offsetX = clamp(Math.abs(lengthX.value), 0, modalContent.value.offsetWidth)\n          offsetX.value = props.swipeToCloseDirection === 'RIGHT' ? -_offsetX : _offsetX\n        }\n      },\n      onSwipeEnd(event, direction) {\n        const swipeEnd = new Date().getTime()\n\n        const validDirection = direction === props.swipeToCloseDirection\n        const validDistance = Math.abs(lengthX.value) > LIMIT_DISTANCE * modalContent.value.offsetWidth\n        const validSpeed = swipeEnd - swipeStart <= LIMIT_SPEED\n\n        if (allowSwipe && validDirection && (validDistance || validSpeed)) {\n          // eslint-disable-next-line vue/require-explicit-emits\n          emit('update:modelValue', false)\n          if (document.activeElement) {\n            document.activeElement.blur()\n          }\n          return\n        }\n\n        offsetX.value = 0\n      }\n    })\n  : {}\n\nwatch(\n  () => attrs.modelValue,\n  val => {\n    if (val) {\n      offsetX.value = 0\n    }\n  }\n)\n\nfunction canSwipe(target) {\n  const allow = target.scrollLeft === 0\n  if (target === modalContent.value) {\n    return allow\n  } else {\n    return allow && canSwipe(target.parentElement)\n  }\n}\n</script>\n\n<style scoped>\n.vfm-full-screen {\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  background-color: #fff;\n}\n\n:deep(.vfm-transition) {\n  transition-property: transform;\n  transition-duration: 0.3s;\n}\n\n:deep(.vfm__content) {\n  width: 100%;\n  height: 100%;\n}\n\n@keyframes slideInLeft {\n  from {\n    transform: translate3d(-100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInLeft) {\n  animation-name: slideInLeft;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideInRight {\n  from {\n    transform: translate3d(100%, 0, 0);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n:deep(.slideInRight) {\n  animation-name: slideInRight;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutLeft {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(-100%, 0, 0);\n  }\n}\n\n:deep(.slideOutLeft) {\n  animation-name: slideOutLeft;\n  animation-duration: 0.3s;\n}\n\n@keyframes slideOutRight {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    transform: translate3d(100%, 0, 0);\n  }\n}\n\n:deep(.slideOutRight) {\n  animation-name: slideOutRight;\n  animation-duration: 0.3s;\n}\n</style>\n"],"names":["TransitionState","useTransitionState","state","ref","listeners","beforeEnter","value","afterEnter","beforeLeave","afterLeave","isFocused","element","document","activeElement","FocusTrap","constructor","this","root","elements","onKeyDown","bind","lastElement","length","firstElement","isEnabled","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","enable","selector","querySelectorAll","addEventListener","disable","removeEventListener","focusTrap","useFocusTrap","props","vfmContainer","modalTransitionState","watch","focusRetain","enabled","getPosition","e","clientX","x","clientY","y","targetTouches","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","resizeCursor","t","tr","r","br","b","bl","l","tl","clamp","min","num","max","Math","trimPx","distance","Number","replace","useDragResize","visible","vfmContent","vfmResize","onEvent","resizeVisible","dragResizeStyle","pointerDown","stopPropagation","STATE_RESIZE","STATE_DRAG","direction","target","getAttribute","_state","dragSelector","includes","validDragElement","rectContainer","getBoundingClientRect","rectContent","isAbsolute","window","getComputedStyle","position","top","left","limit","fitParent","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","cacheStyle","style","setStyle","body","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","rectContentEdge","positionOffset","EdgeName","s","charAt","toUpperCase","slice","directions","_offset","split","forEach","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","removeDragDown","addResizeDown","nextTick","removeResizeDown","val","drag","resize","keepChangedStyle","hasPassiveEvents","passiveTestOptions","isIosDevice","navigator","platform","test","maxTouchPoints","previousBodyOverflowSetting","previousBodyPaddingRight","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","nodeType","Node","ELEMENT_NODE","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","touches","disableBodyScroll","targetElement","options","console","error","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","getPropertyValue","paddingRight","overflow","setOverflowHidden","enableBodyScroll","filter","useLockScroll","handleLockScroll","modelValue","lockScroll","onBeforeUnmount","noop","inheritAttrs","name","String","default","Boolean","displayDirective","validator","indexOf","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","hideOverlay","clickToClose","escToClose","nonModal","attach","transition","overlayTransition","zIndexAuto","zIndexBase","zIndex","resizeDirections","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","vfmOverlayTransition","vfmTransition","modalStackIndex","visibility","reactive","modal","overlay","overlayTransitionState","overlayListeners","modalListeners","_stopEvent","lastMousedownEl","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","toggle","mounted","createModalEvent","emitEvent","appendChild","index","api","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","querySelector","eventProps","eventType","stopEvent","stop","show","Promise","resolve","reject","res","err","display","flush","modals","onMounted","remove","onMousedown","onMouseupContainer","onEsc","class","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","$props","$setup","_createElementBlock","_mergeProps","_ctx","onKeydown","_createVNode","_toHandlers","_createElementVNode","toString","role","tabindex","onMouseup","_renderSlot","_hoisted_2","methods","dynamicModals","closed","beforeClose","rejectClose","beforeOpen","$nextTick","isString","_hoisted_1","_createBlock","component","id","on","on_beforeClose","$options","on_closed","on_beforeOpen","on_opened","opened","slots","slot","_createCommentVNode","innerHTML","ModalInstance","bindApi","_component","assign","markRaw","VueFinalModal","VueFinalModalComponent","shallowReactive","ModalsContainer","ModalsContainerComponent","args","useModal","hide","names","hideAll","map","get","allSettled","existModal","_options","createModalInstance","modalInstance","$vfm","SwipeDirection","useSwipeable","threshold","onSwipeStart","onSwipe","onSwipeEnd","coordsStart","coordsEnd","diffX","diffY","abs","isThresholdExceeded","isSwiping","updateCoordsEnd","listenerOptions","isPassiveEventSupported","supportsPassive","optionsBlock","checkPassiveEventSupport","events","pointerStart","capture","updateCoordsStart","useEventListener","pointerMove","pointerEnd","stops","lengthX","lengthY","attrs","useAttrs","bottomSheetEl","offsetY","swipeStart","allowSwipe","Date","getTime","canSwipe","swipeToCloseDirection","offsetHeight","swipeEnd","validDirection","validDistance","blur","allow","modalContent","offsetX","_offsetX","offsetWidth","scrollLeft"],"mappings":"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"}