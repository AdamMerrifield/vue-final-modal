{"version":3,"file":"VueFinalModal.umd.js","sources":["../lib/utils/dom.js","../lib/utils/focusTrap.js","../lib/VueFinalModal.vue","../lib/PluginCore.js","../lib/utils/array.js","../lib/utils/errors.js","../node_modules/is-mobile/index.js","../lib/Plugin.js"],"sourcesContent":["// Stolen from bootstrap vue\n\n// Determine if an element is an HTML element\nexport const isElement = el => !!(el && el.nodeType === Node.ELEMENT_NODE)\n\n// Set an style property on an element\nexport const setStyle = (el, prop, value) => {\n  if (prop && isElement(el)) {\n    el.style[prop] = value\n  }\n}\n\n// Remove an style property from an element\nexport const removeStyle = (el, prop) => {\n  if (prop && isElement(el)) {\n    el.style[prop] = ''\n  }\n}\n","// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n    this.enable = this.enable.bind(this)\n    this.disable = this.disable.bind(this)\n    this.firstElement = this.firstElement.bind(this)\n    this.lastElement = this.lastElement.bind(this)\n  }\n\n  lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  firstElement() {\n    return this.elements[0] || null\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement())) {\n        this.lastElement().focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement())) {\n      this.firstElement().focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  enabled() {\n    return !!this.root\n  }\n\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\nexport default FocusTrap\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown=\"onEsc\"\n  >\n    <transition\n      :name=\"overlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-show=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      :name=\"transition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @click.self=\"onClickContainer\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"contentStyle\"\n        >\n          <slot v-bind:params=\"params\" />\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport FocusTrap from './utils/focusTrap.js'\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nfunction validateAttachTarget(val) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nconst STYLE_PROP = {\n  type: [String, Object, Array],\n  default: ''\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    value: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: STYLE_PROP,\n    overlayClass: STYLE_PROP,\n    contentClass: STYLE_PROP,\n    styles: STYLE_PROP,\n    overlayStyle: STYLE_PROP,\n    contentStyle: STYLE_PROP,\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: { type: null, default: false, validator: validateAttachTarget },\n    transition: { type: String, default: 'vfm' },\n    overlayTransition: { type: String, default: 'vfm' },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false }\n  },\n  data: () => ({\n    modalStackIndex: null,\n    visible: false,\n    visibility: {\n      modal: false,\n      overlay: false\n    },\n    overlayTransitionState: null,\n    modalTransitionState: null,\n    stopEvent: false,\n    params: {}\n  }),\n  computed: {\n    api() {\n      return this[this.$_options.key]\n    },\n    isComponentReadyToBeDestroyed() {\n      return (\n        (this.hideOverlay || this.overlayTransitionState === TransitionState.Leave) &&\n        this.modalTransitionState === TransitionState.Leave\n      )\n    },\n    calculateZIndex() {\n      if (this.zIndex === false) {\n        if (this.zIndexAuto) {\n          return +this.zIndexBase + 2 * (this.modalStackIndex || 0)\n        } else {\n          return false\n        }\n      } else {\n        return this.zIndex\n      }\n    },\n    bindStyle() {\n      return {\n        ...(this.calculateZIndex !== false && { zIndex: this.calculateZIndex })\n      }\n    }\n  },\n  watch: {\n    value(value) {\n      if (this.stopEvent) {\n        this.stopEvent = false\n        return\n      }\n      this.mounted()\n      if (!value) {\n        if (this.emitEvent('before-close', true)) {\n          return\n        }\n        this.close()\n      }\n    },\n    lockScroll: 'handleLockScroll',\n    hideOverlay(value) {\n      if (this.value && !value) {\n        this.visibility.overlay = true\n      }\n    },\n    attach: 'mounted',\n    isComponentReadyToBeDestroyed(isReady) {\n      if (isReady) {\n        this.visible = false\n      }\n    }\n  },\n  created() {\n    this.api.modals.push(this)\n  },\n  mounted() {\n    this.$focusTrap = new FocusTrap()\n    this.mounted()\n  },\n  beforeDestroy() {\n    this.close()\n    this.$el.remove()\n\n    let index = this.api.modals.findIndex(vm => vm === this)\n    this.api.modals.splice(index, 1)\n  },\n  methods: {\n    mounted() {\n      if (this.value) {\n        let target = this.getAttachElement()\n        if (target || this.attach === false) {\n          this.attach !== false && target.appendChild(this.$el)\n\n          this.modalStackIndex = this.api.openedModals.length - 1\n\n          this.handleLockScroll()\n          this.api.openedModals\n            .filter(vm => vm !== this)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex = index\n                vm.visibility.overlay = false\n              }\n            })\n          if (this.emitEvent('before-open', false)) {\n            return\n          }\n\n          this.visible = true\n          this.$nextTick(() => {\n            this.startTransitionEnter()\n          })\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(this.attach))\n        }\n      }\n    },\n    close() {\n      if (this.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = this.api.openedModals[this.api.openedModals.length - 1]\n        $_vm.handleLockScroll()\n        if ($_vm.focusRetain || $_vm.focusTrap) {\n          $_vm.$refs.vfmContainer.focus()\n        }\n        !$_vm.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      this.startTransitionLeave()\n    },\n    startTransitionEnter() {\n      this.visibility.overlay = true\n      this.visibility.modal = true\n    },\n    startTransitionLeave() {\n      this.visibility.overlay = false\n      this.visibility.modal = false\n    },\n    handleLockScroll() {\n      if (this.value) {\n        this.lockScroll ? this.api.lockScroll() : this.api.unlockScroll()\n      }\n    },\n    getAttachElement() {\n      let target\n      if (this.attach === false) {\n        target = false\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(this.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n      return target\n    },\n    beforeOverlayEnter() {\n      this.overlayTransitionState = TransitionState.Entering\n    },\n    afterOverlayEnter() {\n      this.overlayTransitionState = TransitionState.Enter\n    },\n    beforeOverlayLeave() {\n      this.overlayTransitionState = TransitionState.Leaving\n    },\n    afterOverlayLeave() {\n      this.overlayTransitionState = TransitionState.Leave\n    },\n    beforeModalEnter() {\n      this.modalTransitionState = TransitionState.Entering\n    },\n    afterModalEnter() {\n      this.modalTransitionState = TransitionState.Enter\n      if (this.focusRetain || this.focusTrap) {\n        this.$refs.vfmContainer.focus()\n      }\n      if (this.focusTrap) {\n        this.$focusTrap.enable(this.$refs.vfmContainer)\n      }\n      this.$emit('opened', this.createModalEvent({ type: 'opened' }))\n    },\n    beforeModalLeave() {\n      this.modalTransitionState = TransitionState.Leaving\n\n      if (this.$focusTrap.enabled()) {\n        this.$focusTrap.disable()\n      }\n    },\n    afterModalLeave() {\n      this.modalTransitionState = TransitionState.Leave\n      this.modalStackIndex = null\n\n      if (this.api.openedModals.length === 0) {\n        this.lockScroll && this.api.unlockScroll()\n      }\n\n      let stopEvent = false\n      const event = this.createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      this.$emit('closed', event)\n      if (stopEvent) return\n      this.params = {}\n    },\n    onClickContainer() {\n      this.$emit('click-outside', this.createModalEvent({ type: 'click-outside' }))\n      this.clickToClose && this.$emit('input', false)\n    },\n    onEsc(evt) {\n      if (evt.keyCode === 27 && this.visible && this.escToClose) {\n        this.$emit('input', false)\n      }\n    },\n    createModalEvent(eventProps = {}) {\n      return {\n        ref: this,\n        ...eventProps\n      }\n    },\n    emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = this.createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      this.$emit(eventType, event)\n      if (stopEvent) {\n        this.stopEvent = true\n        this.$emit('input', value)\n        return true\n      }\n      return false\n    },\n    toggle(show, params) {\n      const value = typeof show === 'boolean' ? show : !this.value\n      if (value && arguments.length === 2) {\n        this.params = params\n      }\n      this.$emit('input', value)\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter,\n.vfm-leave-to {\n  opacity: 0;\n}\n</style>\n","import { setStyle, removeStyle } from './utils/dom.js'\nimport { findRight } from './utils/array'\nimport VueFinalModal from './VueFinalModal.vue'\nimport ModalsContainer from './ModalsContainer.vue'\n\nfunction assignOptions(component, options) {\n  const _component = { ...component }\n  Object.assign(_component.props, {\n    $_options: { type: Object, default: () => options }\n  })\n  return _component\n}\n\nfunction createVfm(Vue, options) {\n  let vfm\n  const PREFIX = '_dynamic_modal_'\n  const generateId = ((index = 0) => () => (index++).toString())()\n\n  return function() {\n    vfm = {\n      show(modal, ...args) {\n        switch (typeof modal) {\n          case 'string':\n            this.toggle(modal, true, ...args)\n            break\n          case 'object':\n            {\n              const defaultModal = {\n                component: options.componentName,\n                bind: {},\n                slots: {},\n                on: {}\n              }\n              modal = Object.assign(defaultModal, modal)\n              const id = generateId()\n              const name = modal.bind.name || PREFIX + id\n              this.dynamicModals.push({\n                value: true,\n                id,\n                ...modal,\n                component: modal.component,\n                slots: modal.slots,\n                bind: { ...modal.bind, name },\n                params: args[0]\n              })\n            }\n            break\n        }\n      },\n      hide(name) {\n        this.toggle(name, false)\n      },\n      hideAll() {\n        for (let i = this.openedModals.length - 1; i >= 0; i--) {\n          this.openedModals[i].$emit('input', false)\n        }\n      },\n      toggle(name, ...args) {\n        const modal = this.get(name)\n        if (modal !== undefined) {\n          modal.toggle(...args)\n        }\n      },\n      isScrollLocked: false,\n      lockScroll() {\n        if (this.isScrollLocked) return\n        if (options.isMobile) {\n          setStyle(document.body, 'overflow', 'hidden')\n        } else {\n          window.addEventListener('wheel', this.lockScrollListener, { passive: false })\n        }\n        this.isScrollLocked = true\n      },\n      unlockScroll() {\n        if (options.isMobile) {\n          removeStyle(document.body, 'overflow')\n        } else {\n          window.removeEventListener('wheel', this.lockScrollListener)\n        }\n        this.isScrollLocked = false\n      },\n      lockScrollListener(e) {\n        e.preventDefault()\n      },\n      get(name) {\n        return findRight(this.modals, modal => modal.name === name)\n      },\n      dynamicModals: [],\n      get openedModals() {\n        return this.modals.filter(modal => modal.value)\n      },\n      modals: []\n    }\n    return Vue.observable(vfm)\n  }\n}\n\nexport function bindPrototype(Vue, options) {\n  const vfm = createVfm(Vue, options)()\n  Object.defineProperty(Vue.prototype, options.key, {\n    get() {\n      return vfm\n    }\n  })\n}\n\nexport function registModal(Vue, options) {\n  Vue.component(options.componentName, assignOptions(VueFinalModal, options))\n}\nexport function registContainer(Vue, options) {\n  Vue.component(options.dynamicContainerName, assignOptions(ModalsContainer, options))\n}\n","export function findRight(arr, callback) {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (callback(arr[i], i)) {\n      return arr[i]\n    }\n  }\n  return undefined\n}\n","export const DUPLICATE_PLUGIN_COMPONENT =\n  '[vue-final-modal] Duplicate registration API key and componentName of VueFinalModal.'\n\nexport const DUPLICATE_COMPONENT = '[vue-final-modal] Duplicate registration componentName of VueFinalModal.'\n\nexport const DUPLICATE_DYNAMIC_CONTAINER =\n  '[vue-final-modal] Duplicate registration dynamicContainerName of ModalsContainer.'\n","'use strict'\r\n\r\nmodule.exports = isMobile\r\nmodule.exports.isMobile = isMobile\r\nmodule.exports.default = isMobile\r\n\r\nvar mobileRE = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i\r\n\r\nvar tabletRE = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i\r\n\r\nfunction isMobile (opts) {\r\n  if (!opts) opts = {}\r\n  var ua = opts.ua\r\n  if (!ua && typeof navigator !== 'undefined') ua = navigator.userAgent\r\n  if (ua && ua.headers && typeof ua.headers['user-agent'] === 'string') {\r\n    ua = ua.headers['user-agent']\r\n  }\r\n  if (typeof ua !== 'string') return false\r\n\r\n  var result = opts.tablet ? tabletRE.test(ua) : mobileRE.test(ua)\r\n\r\n  if (\r\n    !result &&\r\n    opts.tablet &&\r\n    opts.featureDetect &&\r\n    navigator &&\r\n    navigator.maxTouchPoints > 1 &&\r\n    ua.indexOf('Macintosh') !== -1 &&\r\n    ua.indexOf('Safari') !== -1\r\n  ) {\r\n    result = true\r\n  }\r\n\r\n  return result\r\n}\r\n","import { bindPrototype, registModal, registContainer } from './PluginCore'\nimport { DUPLICATE_PLUGIN_COMPONENT, DUPLICATE_COMPONENT, DUPLICATE_DYNAMIC_CONTAINER } from './utils/errors'\nimport mobile from 'is-mobile'\n\nconst defaultOptions = {\n  componentName: 'VueFinalModal',\n  dynamicContainerName: 'ModalsContainer',\n  key: '$vfm',\n  isMobile: mobile()\n}\n\nconst Plugin = () => ({\n  install(Vue, options) {\n    const _options = Object.assign({}, defaultOptions, options)\n    const isDuplicateKey = Vue.prototype[_options.key]\n    const isDuplicateComponent = Vue.options.components[_options.componentName]\n    const isDuplicateDynamicContainer = Vue.options.components[_options.dynamicContainerName]\n\n    if (isDuplicateComponent || isDuplicateDynamicContainer) {\n      if (typeof window !== 'undefined') {\n        if (isDuplicateKey) {\n          console.error(DUPLICATE_PLUGIN_COMPONENT)\n        }\n        if (isDuplicateComponent) {\n          console.error(DUPLICATE_COMPONENT)\n        }\n        if (isDuplicateDynamicContainer) {\n          console.error(DUPLICATE_DYNAMIC_CONTAINER)\n        }\n      }\n    } else {\n      if (!isDuplicateKey) {\n        bindPrototype(Vue, _options)\n      }\n      registModal(Vue, _options)\n      registContainer(Vue, _options)\n    }\n  }\n})\n\nexport default Plugin\n"],"names":["isElement","el","nodeType","Node","ELEMENT_NODE","queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","enable","disable","firstElement","lastElement","length","event","key","keyCode","isTabPressed","shiftKey","focus","preventDefault","addEventListener","removeEventListener","assignOptions","component","options","_component","Object","assign","props","$_options","type","default","createVfm","Vue","vfm","PREFIX","generateId","index","toString","show","modal","args","toggle","defaultModal","componentName","slots","on","id","name","dynamicModals","push","value","params","hide","hideAll","i","openedModals","$emit","get","undefined","isScrollLocked","lockScroll","prop","isMobile","body","style","window","lockScrollListener","passive","unlockScroll","e","arr","callback","findRight","modals","filter","observable","mobileRE","tabletRE","opts","ua","navigator","userAgent","headers","result","tablet","test","featureDetect","maxTouchPoints","indexOf","defaultOptions","dynamicContainerName","mobile","install","_options","isDuplicateKey","prototype","isDuplicateComponent","components","isDuplicateDynamicContainer","console","error","defineProperty","bindPrototype","VueFinalModal","registModal","ModalsContainer","registContainer"],"mappings":"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"}