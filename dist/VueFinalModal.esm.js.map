{"version":3,"file":"VueFinalModal.esm.js","sources":["../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","../lib/index.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    // If previousBodyPaddingRight is already set, don't set it again.\n    if (previousBodyPaddingRight === undefined) {\n      var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n      var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n      if (_reserveScrollBarGap && scrollBarGap > 0) {\n        previousBodyPaddingRight = document.body.style.paddingRight;\n        document.body.style.paddingRight = scrollBarGap + 'px';\n      }\n    }\n\n    // If previousBodyOverflowSetting is already set, don't set it again.\n    if (previousBodyOverflowSetting === undefined) {\n      previousBodyOverflowSetting = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n    }\n  });\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down\n  // the responsiveness for some reason. Setting within a setTimeout fixes this.\n  setTimeout(function () {\n    if (previousBodyPaddingRight !== undefined) {\n      document.body.style.paddingRight = previousBodyPaddingRight;\n\n      // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n      // can be set again.\n      previousBodyPaddingRight = undefined;\n    }\n\n    if (previousBodyOverflowSetting !== undefined) {\n      document.body.style.overflow = previousBodyOverflowSetting;\n\n      // Restore previousBodyOverflowSetting to undefined\n      // so setOverflowHidden knows it can be set again.\n      previousBodyOverflowSetting = undefined;\n    }\n  });\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  if (isIosDevice) {\n    // targetElement must be provided, and disableBodyScroll must not have been\n    // called on this targetElement before.\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n      return;\n    }\n\n    if (targetElement && !locks.some(function (lock) {\n      return lock.targetElement === targetElement;\n    })) {\n      var lock = {\n        targetElement: targetElement,\n        options: options || {}\n      };\n\n      locks = [].concat(_toConsumableArray(locks), [lock]);\n\n      targetElement.ontouchstart = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          initialClientY = event.targetTouches[0].clientY;\n        }\n      };\n      targetElement.ontouchmove = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          handleScroll(event, targetElement);\n        }\n      };\n\n      if (!documentListenerAdded) {\n        document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n        documentListenerAdded = true;\n      }\n    }\n  } else {\n    setOverflowHidden(options);\n    var _lock = {\n      targetElement: targetElement,\n      options: options || {}\n    };\n\n    locks = [].concat(_toConsumableArray(locks), [_lock]);\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    locks = [];\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n    locks = [];\n  }\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (isIosDevice) {\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n      return;\n    }\n\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n\n      documentListenerAdded = false;\n    }\n  } else {\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n    if (!locks.length) {\n      restoreOverflowSetting();\n    }\n  }\n};\n\n","import modal from './VueFinalModal.vue'\n\nexport const VueFinalModal = modal\n\nexport const install = function(Vue) {\n  Vue.component('VueFinalModal', VueFinalModal)\n}\n"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","hasPassiveEvents","window","passiveTestOptions","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","disableBodyScroll","targetElement","console","error","concat","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","document","passive","undefined","setTimeout","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","body","style","paddingRight","overflow","setOverflowHidden","_lock","clearAllBodyScrollLocks","forEach","VueFinalModal","install","Vue","component"],"mappings":"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"}